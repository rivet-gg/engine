1:"$Sreact.fragment"
2:I[65327,["1965","static/chunks/f67032f2-9c72234b0d8f41b4.js","8229","static/chunks/9da6db1e-dbfab9261a7c6a02.js","7134","static/chunks/7134-7a2ccc87dc1f1c96.js","9078","static/chunks/9078-9c4b2ff48765f274.js","6855","static/chunks/6855-c97c866fb9680afe.js","3285","static/chunks/3285-d8e61078321bd50f.js","9657","static/chunks/9657-90d7d8e86cd8d7b3.js","1983","static/chunks/1983-7439545cf8f39348.js","7678","static/chunks/7678-80db3db210142fa5.js","3459","static/chunks/3459-aa0b1d8277b7bbbd.js","7177","static/chunks/app/layout-e3cfc449b871f8f6.js"],"GoogleAnalytics"]
3:I[559,["1965","static/chunks/f67032f2-9c72234b0d8f41b4.js","8229","static/chunks/9da6db1e-dbfab9261a7c6a02.js","7134","static/chunks/7134-7a2ccc87dc1f1c96.js","9078","static/chunks/9078-9c4b2ff48765f274.js","6855","static/chunks/6855-c97c866fb9680afe.js","3285","static/chunks/3285-d8e61078321bd50f.js","9657","static/chunks/9657-90d7d8e86cd8d7b3.js","1983","static/chunks/1983-7439545cf8f39348.js","7678","static/chunks/7678-80db3db210142fa5.js","3459","static/chunks/3459-aa0b1d8277b7bbbd.js","7177","static/chunks/app/layout-e3cfc449b871f8f6.js"],""]
4:I[32761,["1965","static/chunks/f67032f2-9c72234b0d8f41b4.js","8229","static/chunks/9da6db1e-dbfab9261a7c6a02.js","7134","static/chunks/7134-7a2ccc87dc1f1c96.js","9078","static/chunks/9078-9c4b2ff48765f274.js","6855","static/chunks/6855-c97c866fb9680afe.js","5051","static/chunks/5051-51ff92d736937f41.js","9657","static/chunks/9657-90d7d8e86cd8d7b3.js","1983","static/chunks/1983-7439545cf8f39348.js","7678","static/chunks/7678-80db3db210142fa5.js","1834","static/chunks/app/(v2)/%5Bsection%5D/%5B%5B...page%5D%5D/page-49b70caf2ce6d403.js"],"TooltipProvider"]
5:I[79838,["1965","static/chunks/f67032f2-9c72234b0d8f41b4.js","8229","static/chunks/9da6db1e-dbfab9261a7c6a02.js","7134","static/chunks/7134-7a2ccc87dc1f1c96.js","9078","static/chunks/9078-9c4b2ff48765f274.js","6855","static/chunks/6855-c97c866fb9680afe.js","3285","static/chunks/3285-d8e61078321bd50f.js","9657","static/chunks/9657-90d7d8e86cd8d7b3.js","1983","static/chunks/1983-7439545cf8f39348.js","7678","static/chunks/7678-80db3db210142fa5.js","3459","static/chunks/3459-aa0b1d8277b7bbbd.js","7177","static/chunks/app/layout-e3cfc449b871f8f6.js"],"Providers"]
6:I[49287,[],""]
7:I[34235,[],""]
8:I[91971,["1965","static/chunks/f67032f2-9c72234b0d8f41b4.js","8229","static/chunks/9da6db1e-dbfab9261a7c6a02.js","7134","static/chunks/7134-7a2ccc87dc1f1c96.js","9078","static/chunks/9078-9c4b2ff48765f274.js","6855","static/chunks/6855-c97c866fb9680afe.js","5051","static/chunks/5051-51ff92d736937f41.js","9657","static/chunks/9657-90d7d8e86cd8d7b3.js","1983","static/chunks/1983-7439545cf8f39348.js","7678","static/chunks/7678-80db3db210142fa5.js","1834","static/chunks/app/(v2)/%5Bsection%5D/%5B%5B...page%5D%5D/page-49b70caf2ce6d403.js"],"Toaster"]
9:I[82345,["1965","static/chunks/f67032f2-9c72234b0d8f41b4.js","7134","static/chunks/7134-7a2ccc87dc1f1c96.js","9078","static/chunks/9078-9c4b2ff48765f274.js","6855","static/chunks/6855-c97c866fb9680afe.js","5051","static/chunks/5051-51ff92d736937f41.js","3591","static/chunks/3591-193e430a542376f5.js","4395","static/chunks/4395-09a8f40ef66f9d5c.js","9657","static/chunks/9657-90d7d8e86cd8d7b3.js","1983","static/chunks/1983-7439545cf8f39348.js","7678","static/chunks/7678-80db3db210142fa5.js","7261","static/chunks/7261-eddb3e7984c54a8d.js","6213","static/chunks/app/(v2)/%5Bsection%5D/%5B%5B...page%5D%5D/layout-98b1c4e9d514d53c.js"],"Header"]
a:I[59534,["1965","static/chunks/f67032f2-9c72234b0d8f41b4.js","8229","static/chunks/9da6db1e-dbfab9261a7c6a02.js","7134","static/chunks/7134-7a2ccc87dc1f1c96.js","9078","static/chunks/9078-9c4b2ff48765f274.js","6855","static/chunks/6855-c97c866fb9680afe.js","5051","static/chunks/5051-51ff92d736937f41.js","9657","static/chunks/9657-90d7d8e86cd8d7b3.js","1983","static/chunks/1983-7439545cf8f39348.js","7678","static/chunks/7678-80db3db210142fa5.js","1834","static/chunks/app/(v2)/%5Bsection%5D/%5B%5B...page%5D%5D/page-49b70caf2ce6d403.js"],""]
b:"$Sreact.suspense"
c:I[82813,["7134","static/chunks/7134-7a2ccc87dc1f1c96.js","9657","static/chunks/9657-90d7d8e86cd8d7b3.js","3459","static/chunks/3459-aa0b1d8277b7bbbd.js","5519","static/chunks/app/(v2)/layout-24f9ee0b53a6742c.js"],"EmbedDetector"]
d:I[53696,["7134","static/chunks/7134-7a2ccc87dc1f1c96.js","9657","static/chunks/9657-90d7d8e86cd8d7b3.js","3459","static/chunks/3459-aa0b1d8277b7bbbd.js","5519","static/chunks/app/(v2)/layout-24f9ee0b53a6742c.js"],"Footer"]
e:I[82778,["1965","static/chunks/f67032f2-9c72234b0d8f41b4.js","7134","static/chunks/7134-7a2ccc87dc1f1c96.js","9078","static/chunks/9078-9c4b2ff48765f274.js","6855","static/chunks/6855-c97c866fb9680afe.js","5051","static/chunks/5051-51ff92d736937f41.js","3591","static/chunks/3591-193e430a542376f5.js","4395","static/chunks/4395-09a8f40ef66f9d5c.js","9657","static/chunks/9657-90d7d8e86cd8d7b3.js","1983","static/chunks/1983-7439545cf8f39348.js","7678","static/chunks/7678-80db3db210142fa5.js","7261","static/chunks/7261-eddb3e7984c54a8d.js","6213","static/chunks/app/(v2)/%5Bsection%5D/%5B%5B...page%5D%5D/layout-98b1c4e9d514d53c.js"],"NavigationStateProvider"]
10:I[93621,[],"MetadataBoundary"]
12:I[93621,[],"OutletBoundary"]
15:I[16867,[],"AsyncMetadataOutlet"]
17:I[93621,[],"ViewportBoundary"]
19:I[27890,[],""]
:HL["/_next/static/css/565f4925fe90494c.css","style"]
:HL["/_next/static/css/b2a053553e69c47d.css","style"]
:HL["/_next/static/css/9ded352fd1582faa.css","style"]
0:{"P":null,"b":"xyrr8R3WCFgaolPiXJ-Nn","p":"","c":["","docs","cloud","solutions","game-servers",""],"i":false,"f":[[["",{"children":["(v2)",{"children":[["section","docs","d"],{"children":[["page","cloud/solutions/game-servers","oc"],{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/565f4925fe90494c.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"dark","children":[["$","head",null,{"children":[["$","$L2",null,{"gaId":"G-GHX1328ZFD"}],["$","$L3",null,{"src":"https://analytics.ahrefs.com/analytics.js","data-key":"wQAsHie9RgJMLNhmUbr/fQ","strategy":"beforeInteractive"}],["$","link",null,{"rel":"apple-touch-icon","sizes":"180x180","href":"/icons/apple-touch-icon.png?20240925"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"32x32","href":"/icons/favicon-32x32.png?20240925"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"16x16","href":"/icons/favicon-16x16.png?20240925"}],["$","link",null,{"rel":"manifest","href":"/icons/site.webmanifest?20240925"}],["$","link",null,{"rel":"mask-icon","href":"/icons/safari-pinned-tab.svg?20240925","color":"#5bbad5"}],["$","meta",null,{"name":"msapplication-TileColor","content":"#0c0a09"}],["$","meta",null,{"name":"theme-color","content":"#0c0a09"}],["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1.0"}]]}],["$","body",null,{"className":"dark","children":[["$","$L4",null,{"children":["$","$L5",null,{"children":["$","$L6",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}],["$","$L8",null,{"theme":"system","className":"toaster group right-8","toastOptions":{"classNames":{"toast":"group toast group-[.toaster]:bg-card group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg group-[.toaster]:border group-[.toaster]:rounded-md","description":"group-[.toast]:text-muted-foreground","actionButton":"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground","cancelButton":"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground"}}}]]}]]}]]}],{"children":["(v2)",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/b2a053553e69c47d.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/9ded352fd1582faa.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],[["$","$L6",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","$L9",null,{"variant":"floating"}],["$","div",null,{"className":"relative flex min-h-[80vh] w-full items-center justify-center text-center","children":["$","div",null,{"className":"transition-opacity","children":[["$","h1",null,{"className":"mb-3 flex items-center justify-center text-3xl text-white","children":[["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"block-question","className":"svg-inline--fa fa-block-question mr-2 size-10","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M64 32C28.7 32 0 60.7 0 96L0 416c0 35.3 28.7 64 64 64l320 0c35.3 0 64-28.7 64-64l0-320c0-35.3-28.7-64-64-64L64 32zm73.8 149.3c7.9-22.3 29.1-37.3 52.8-37.3l58.3 0c34.9 0 63.1 28.3 63.1 63.1c0 22.6-12.1 43.5-31.7 54.8L248 280.4c-.2 13-10.9 23.6-24 23.6c-13.3 0-24-10.7-24-24l0-13.5c0-8.6 4.6-16.5 12.1-20.8l44.3-25.4c4.7-2.7 7.6-7.7 7.6-13.1c0-8.4-6.8-15.1-15.1-15.1l-58.3 0c-3.4 0-6.4 2.1-7.5 5.3l-.4 1.2c-4.4 12.5-18.2 19-30.6 14.6s-19-18.2-14.6-30.6l.4-1.2zM192 368a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zM48 104a24 24 0 1 1 48 0 24 24 0 1 1 -48 0zM376 80a24 24 0 1 1 0 48 24 24 0 1 1 0-48zM48 408a24 24 0 1 1 48 0 24 24 0 1 1 -48 0zm328-24a24 24 0 1 1 0 48 24 24 0 1 1 0-48z","style":{}}]}]," ","Not Found"]}],["$","$La",null,{"aria-selected":false,"className":"relative inline-flex items-center justify-center gap-0.5 overflow-hidden font-semibold transition inline-flex items-center justify-center gap-0.5 rounded-sm px-3 py-1 text-sm font-semibold bg-transparent text-cream-100 border-2 border-cream-100 hover:bg-cream-100 hover:text-charcole-950","href":"/","children":[null,false,"Home",false]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","$b",null,{"children":["$","$Lc",null,{}]}],["$","$Ld",null,{}]]]}],{"children":[["section","docs","d"],["$","$1","c",{"children":[null,["$","$L6",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["page","cloud/solutions/game-servers","oc"],["$","$1","c",{"children":[null,["$","$Le",null,{"children":[["$","$L9",null,{"active":"docs","subnav":["$","div",null,{"className":"hidden h-14 items-center empty:hidden md:flex gap-4 pt-2","children":[["$","$La","0",{"href":"/docs","target":"$undefined","aria-current":"$undefined","children":["Documentation"],"className":"group group/button justify-center whitespace-nowrap font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 [&_svg]:size-[1em] hover:text-accent-foreground py-2 gap-1.5 text-muted-foreground aria-current-page:text-foreground px-0 text-sm hover:bg-transparent flex items-center border-b-2 border-transparent aria-current-page:border-primary rounded-none h-full","ref":null,"disabled":"$undefined"}],["$","$La","1",{"href":"/docs/cloud","target":"$undefined","aria-current":"$undefined","children":["Cloud"],"className":"group group/button justify-center whitespace-nowrap font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 [&_svg]:size-[1em] hover:text-accent-foreground py-2 gap-1.5 text-muted-foreground aria-current-page:text-foreground px-0 text-sm hover:bg-transparent flex items-center border-b-2 border-transparent aria-current-page:border-primary rounded-none h-full","ref":null,"disabled":"$undefined"}]]}],"variant":"full-width","mobileSidebar":null}],["$","div",null,{"className":"w-full","children":["$","div",null,{"className":"md:grid-cols-docs-no-sidebar lg:grid-cols-docs mx-auto flex w-full flex-col justify-center md:grid min-h-content","style":{"--header-height":"6.5rem"},"children":["$","$L6",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$Lf",["$","$L10",null,{"children":"$L11"}],null,["$","$L12",null,{"children":["$L13","$L14",["$","$L15",null,{"promise":"$@16"}]]}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","NhJ1vzHC1CC8wUbRogNZN",{"children":[["$","$L17",null,{"children":"$L18"}],null]}],null]}],false]],"m":"$undefined","G":["$19","$undefined"],"s":false,"S":true}
1a:I[16867,[],"AsyncMetadata"]
11:["$","$b",null,{"fallback":null,"children":["$","$L1a",null,{"promise":"$@1b"}]}]
14:null
1c:I[88995,["1965","static/chunks/f67032f2-9c72234b0d8f41b4.js","8229","static/chunks/9da6db1e-dbfab9261a7c6a02.js","7134","static/chunks/7134-7a2ccc87dc1f1c96.js","9078","static/chunks/9078-9c4b2ff48765f274.js","6855","static/chunks/6855-c97c866fb9680afe.js","5051","static/chunks/5051-51ff92d736937f41.js","9657","static/chunks/9657-90d7d8e86cd8d7b3.js","1983","static/chunks/1983-7439545cf8f39348.js","7678","static/chunks/7678-80db3db210142fa5.js","1834","static/chunks/app/(v2)/%5Bsection%5D/%5B%5B...page%5D%5D/page-49b70caf2ce6d403.js"],"DocsPageDropdown"]
1d:I[75036,["1965","static/chunks/f67032f2-9c72234b0d8f41b4.js","8229","static/chunks/9da6db1e-dbfab9261a7c6a02.js","7134","static/chunks/7134-7a2ccc87dc1f1c96.js","9078","static/chunks/9078-9c4b2ff48765f274.js","6855","static/chunks/6855-c97c866fb9680afe.js","5051","static/chunks/5051-51ff92d736937f41.js","9657","static/chunks/9657-90d7d8e86cd8d7b3.js","1983","static/chunks/1983-7439545cf8f39348.js","7678","static/chunks/7678-80db3db210142fa5.js","1834","static/chunks/app/(v2)/%5Bsection%5D/%5B%5B...page%5D%5D/page-49b70caf2ce6d403.js"],"Heading"]
1e:I[48652,["1965","static/chunks/f67032f2-9c72234b0d8f41b4.js","8229","static/chunks/9da6db1e-dbfab9261a7c6a02.js","7134","static/chunks/7134-7a2ccc87dc1f1c96.js","9078","static/chunks/9078-9c4b2ff48765f274.js","6855","static/chunks/6855-c97c866fb9680afe.js","5051","static/chunks/5051-51ff92d736937f41.js","9657","static/chunks/9657-90d7d8e86cd8d7b3.js","1983","static/chunks/1983-7439545cf8f39348.js","7678","static/chunks/7678-80db3db210142fa5.js","1834","static/chunks/app/(v2)/%5Bsection%5D/%5B%5B...page%5D%5D/page-49b70caf2ce6d403.js"],"Tabs"]
1f:I[63843,["1965","static/chunks/f67032f2-9c72234b0d8f41b4.js","8229","static/chunks/9da6db1e-dbfab9261a7c6a02.js","7134","static/chunks/7134-7a2ccc87dc1f1c96.js","9078","static/chunks/9078-9c4b2ff48765f274.js","6855","static/chunks/6855-c97c866fb9680afe.js","5051","static/chunks/5051-51ff92d736937f41.js","9657","static/chunks/9657-90d7d8e86cd8d7b3.js","1983","static/chunks/1983-7439545cf8f39348.js","7678","static/chunks/7678-80db3db210142fa5.js","1834","static/chunks/app/(v2)/%5Bsection%5D/%5B%5B...page%5D%5D/page-49b70caf2ce6d403.js"],"ScrollArea"]
20:I[48652,["1965","static/chunks/f67032f2-9c72234b0d8f41b4.js","8229","static/chunks/9da6db1e-dbfab9261a7c6a02.js","7134","static/chunks/7134-7a2ccc87dc1f1c96.js","9078","static/chunks/9078-9c4b2ff48765f274.js","6855","static/chunks/6855-c97c866fb9680afe.js","5051","static/chunks/5051-51ff92d736937f41.js","9657","static/chunks/9657-90d7d8e86cd8d7b3.js","1983","static/chunks/1983-7439545cf8f39348.js","7678","static/chunks/7678-80db3db210142fa5.js","1834","static/chunks/app/(v2)/%5Bsection%5D/%5B%5B...page%5D%5D/page-49b70caf2ce6d403.js"],"TabsList"]
21:I[48652,["1965","static/chunks/f67032f2-9c72234b0d8f41b4.js","8229","static/chunks/9da6db1e-dbfab9261a7c6a02.js","7134","static/chunks/7134-7a2ccc87dc1f1c96.js","9078","static/chunks/9078-9c4b2ff48765f274.js","6855","static/chunks/6855-c97c866fb9680afe.js","5051","static/chunks/5051-51ff92d736937f41.js","9657","static/chunks/9657-90d7d8e86cd8d7b3.js","1983","static/chunks/1983-7439545cf8f39348.js","7678","static/chunks/7678-80db3db210142fa5.js","1834","static/chunks/app/(v2)/%5Bsection%5D/%5B%5B...page%5D%5D/page-49b70caf2ce6d403.js"],"TabsTrigger"]
22:I[48652,["1965","static/chunks/f67032f2-9c72234b0d8f41b4.js","8229","static/chunks/9da6db1e-dbfab9261a7c6a02.js","7134","static/chunks/7134-7a2ccc87dc1f1c96.js","9078","static/chunks/9078-9c4b2ff48765f274.js","6855","static/chunks/6855-c97c866fb9680afe.js","5051","static/chunks/5051-51ff92d736937f41.js","9657","static/chunks/9657-90d7d8e86cd8d7b3.js","1983","static/chunks/1983-7439545cf8f39348.js","7678","static/chunks/7678-80db3db210142fa5.js","1834","static/chunks/app/(v2)/%5Bsection%5D/%5B%5B...page%5D%5D/page-49b70caf2ce6d403.js"],"TabsContent"]
23:I[32761,["1965","static/chunks/f67032f2-9c72234b0d8f41b4.js","8229","static/chunks/9da6db1e-dbfab9261a7c6a02.js","7134","static/chunks/7134-7a2ccc87dc1f1c96.js","9078","static/chunks/9078-9c4b2ff48765f274.js","6855","static/chunks/6855-c97c866fb9680afe.js","5051","static/chunks/5051-51ff92d736937f41.js","9657","static/chunks/9657-90d7d8e86cd8d7b3.js","1983","static/chunks/1983-7439545cf8f39348.js","7678","static/chunks/7678-80db3db210142fa5.js","1834","static/chunks/app/(v2)/%5Bsection%5D/%5B%5B...page%5D%5D/page-49b70caf2ce6d403.js"],"WithTooltip"]
24:I[30860,["1965","static/chunks/f67032f2-9c72234b0d8f41b4.js","8229","static/chunks/9da6db1e-dbfab9261a7c6a02.js","7134","static/chunks/7134-7a2ccc87dc1f1c96.js","9078","static/chunks/9078-9c4b2ff48765f274.js","6855","static/chunks/6855-c97c866fb9680afe.js","5051","static/chunks/5051-51ff92d736937f41.js","9657","static/chunks/9657-90d7d8e86cd8d7b3.js","1983","static/chunks/1983-7439545cf8f39348.js","7678","static/chunks/7678-80db3db210142fa5.js","1834","static/chunks/app/(v2)/%5Bsection%5D/%5B%5B...page%5D%5D/page-49b70caf2ce6d403.js"],"CopyCodeTrigger"]
31:I[19897,["1965","static/chunks/f67032f2-9c72234b0d8f41b4.js","8229","static/chunks/9da6db1e-dbfab9261a7c6a02.js","7134","static/chunks/7134-7a2ccc87dc1f1c96.js","9078","static/chunks/9078-9c4b2ff48765f274.js","6855","static/chunks/6855-c97c866fb9680afe.js","5051","static/chunks/5051-51ff92d736937f41.js","9657","static/chunks/9657-90d7d8e86cd8d7b3.js","1983","static/chunks/1983-7439545cf8f39348.js","7678","static/chunks/7678-80db3db210142fa5.js","1834","static/chunks/app/(v2)/%5Bsection%5D/%5B%5B...page%5D%5D/page-49b70caf2ce6d403.js"],"Comments"]
32:I[9777,["1965","static/chunks/f67032f2-9c72234b0d8f41b4.js","8229","static/chunks/9da6db1e-dbfab9261a7c6a02.js","7134","static/chunks/7134-7a2ccc87dc1f1c96.js","9078","static/chunks/9078-9c4b2ff48765f274.js","6855","static/chunks/6855-c97c866fb9680afe.js","5051","static/chunks/5051-51ff92d736937f41.js","9657","static/chunks/9657-90d7d8e86cd8d7b3.js","1983","static/chunks/1983-7439545cf8f39348.js","7678","static/chunks/7678-80db3db210142fa5.js","1834","static/chunks/app/(v2)/%5Bsection%5D/%5B%5B...page%5D%5D/page-49b70caf2ce6d403.js"],"DocsTableOfContents"]
25:T73c,<pre class="shiki ayu-dark" style="background-color:#0c0a09;color:#bfbdb6" tabindex="0"><code><span class="line"><span style="color:#FF8F40">FROM</span><span style="color:#BFBDB6"> node:22-alpine</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF8F40">WORKDIR</span><span style="color:#BFBDB6"> /app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic"># Copy your game server files</span></span>
<span class="line"><span style="color:#FF8F40">COPY</span><span style="color:#BFBDB6"> package.json ./</span></span>
<span class="line"><span style="color:#FF8F40">RUN</span><span style="color:#BFBDB6"> npm install</span></span>
<span class="line"><span style="color:#FF8F40">COPY</span><span style="color:#BFBDB6"> server.js ./</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic"># Required: Create non-root user for security</span></span>
<span class="line"><span style="color:#FF8F40">RUN</span><span style="color:#BFBDB6"> addgroup -S rivet &#x26;&#x26; \</span></span>
<span class="line"><span style="color:#BFBDB6">    adduser -S -G rivet rivet &#x26;&#x26; \</span></span>
<span class="line"><span style="color:#BFBDB6">    chown -R rivet:rivet /app</span></span>
<span class="line"><span style="color:#FF8F40">USER</span><span style="color:#BFBDB6"> rivet</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic"># Start your game server</span></span>
<span class="line"><span style="color:#FF8F40">CMD</span><span style="color:#BFBDB6"> [</span><span style="color:#AAD94C">"node"</span><span style="color:#BFBDB6">, </span><span style="color:#AAD94C">"server.js"</span><span style="color:#BFBDB6">]</span></span>
<span class="line"></span></code></pre>26:T19f8,<pre class="shiki ayu-dark" style="background-color:#0c0a09;color:#bfbdb6" tabindex="0"><code><span class="line"><span style="color:#FF8F40">import</span><span style="color:#FF8F40"> type</span><span style="color:#BFBDB6"> { ActorContext } </span><span style="color:#FF8F40">from</span><span style="color:#AAD94C"> "@rivet-gg/actor"</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">// Simple ping/pong WebSocket server</span></span>
<span class="line"><span style="color:#FF8F40">export</span><span style="color:#FF8F40"> default</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#FF8F40">  async</span><span style="color:#FFB454"> start</span><span style="color:#BFBDB6">(</span><span style="color:#D2A6FF">ctx</span><span style="color:#F29668">:</span><span style="color:#59C2FF"> ActorContext</span><span style="color:#BFBDB6">) {</span></span>
<span class="line"><span style="color:#BFBDB6">    console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">"Game server starting"</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">    </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">    // Create minimal WebSocket server</span></span>
<span class="line"><span style="color:#BFBDB6">    Deno</span><span style="color:#F29668">.</span><span style="color:#FFB454">serve</span><span style="color:#BFBDB6">((</span><span style="color:#D2A6FF">req</span><span style="color:#BFBDB6">) </span><span style="color:#FF8F40">=></span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#FF8F40">      if</span><span style="color:#BFBDB6"> (req</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">headers</span><span style="color:#F29668">.</span><span style="color:#FFB454">get</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">"upgrade"</span><span style="color:#BFBDB6">) </span><span style="color:#F29668">!==</span><span style="color:#AAD94C"> "websocket"</span><span style="color:#BFBDB6">) {</span></span>
<span class="line"><span style="color:#FF8F40">        return</span><span style="color:#F29668"> new</span><span style="color:#FFB454"> Response</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">"Not a WebSocket connection"</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF8F40">      const</span><span style="color:#BFBDB6"> { socket</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> response } </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> Deno</span><span style="color:#F29668">.</span><span style="color:#FFB454">upgradeWebSocket</span><span style="color:#BFBDB6">(req)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">      </span></span>
<span class="line"><span style="color:#BFBDB6">      socket</span><span style="color:#F29668">.</span><span style="color:#FFB454">addEventListener</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">"open"</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> () </span><span style="color:#FF8F40">=></span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">        console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">"Client connected"</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">      })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">      </span></span>
<span class="line"><span style="color:#BFBDB6">      socket</span><span style="color:#F29668">.</span><span style="color:#FFB454">addEventListener</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">"message"</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> (</span><span style="color:#D2A6FF">event</span><span style="color:#BFBDB6">) </span><span style="color:#FF8F40">=></span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">        console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">`Received: </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">event</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">data</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C">`</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">        </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">        // Simple ping/pong response</span></span>
<span class="line"><span style="color:#FF8F40">        if</span><span style="color:#BFBDB6"> (event</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">data </span><span style="color:#F29668">===</span><span style="color:#AAD94C"> "ping"</span><span style="color:#BFBDB6">) {</span></span>
<span class="line"><span style="color:#BFBDB6">          socket</span><span style="color:#F29668">.</span><span style="color:#FFB454">send</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">"pong"</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">        }</span></span>
<span class="line"><span style="color:#BFBDB6">      })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">      </span></span>
<span class="line"><span style="color:#FF8F40">      return</span><span style="color:#BFBDB6"> response</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">    })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  }</span></span>
<span class="line"><span style="color:#BFBDB6">}</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span></code></pre>27:T1d7b,<pre class="shiki ayu-dark" style="background-color:#0c0a09;color:#bfbdb6" tabindex="0"><code><span class="line"><span style="color:#FF8F40">import</span><span style="color:#BFBDB6"> { RivetClient } </span><span style="color:#FF8F40">from</span><span style="color:#AAD94C"> "@rivet-gg/api"</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">// Initialize Rivet client with your API token from the dashboard</span></span>
<span class="line"><span style="color:#FF8F40">const</span><span style="color:#BFBDB6"> rivet </span><span style="color:#F29668">=</span><span style="color:#F29668"> new</span><span style="color:#FFB454"> RivetClient</span><span style="color:#BFBDB6">({</span></span>
<span class="line"><span style="color:#BFBDB6">  token</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_TOKEN</span></span>
<span class="line"><span style="color:#BFBDB6">})</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">// Function to create a new game server instance</span></span>
<span class="line"><span style="color:#FF8F40">async</span><span style="color:#FF8F40"> function</span><span style="color:#FFB454"> createGameServer</span><span style="color:#BFBDB6">(</span><span style="color:#D2A6FF">gameMode</span><span style="color:#BFBDB6B3">,</span><span style="color:#D2A6FF"> mapName</span><span style="color:#BFBDB6">) {</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> { actor } </span><span style="color:#F29668">=</span><span style="color:#FF8F40"> await</span><span style="color:#BFBDB6"> rivet</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">actors</span><span style="color:#F29668">.</span><span style="color:#FFB454">create</span><span style="color:#BFBDB6">({</span></span>
<span class="line"><span style="color:#BFBDB6">    project</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_PROJECT_ID</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">    environment</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_ENVIRONMENT_ID</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">    body</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">      // Identify this server with tags</span></span>
<span class="line"><span style="color:#BFBDB6">      tags</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> { </span></span>
<span class="line"><span style="color:#BFBDB6">        name</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "game-server"</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">        mode</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> gameMode</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">        map</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> mapName</span></span>
<span class="line"><span style="color:#BFBDB6">      }</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">      </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">      // Reference your uploaded build</span></span>
<span class="line"><span style="color:#BFBDB6">      buildTags</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> { name</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "game-server"</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> current</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "true"</span><span style="color:#BFBDB6"> }</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">      </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">      // Network configuration for your server</span></span>
<span class="line"><span style="color:#BFBDB6">      network</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">        ports</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">          game</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> { protocol</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "https"</span><span style="color:#BFBDB6"> }</span></span>
<span class="line"><span style="color:#BFBDB6">        }</span></span>
<span class="line"><span style="color:#BFBDB6">      }</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">      // IMPORTANT: Do not specify resources if using JavaScript runtime</span></span>
<span class="line"><span style="color:#BFBDB6">      resources</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">        cpu</span><span style="color:#BFBDB6B3">:</span><span style="color:#D2A6FF"> 1000</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">        memory</span><span style="color:#BFBDB6B3">:</span><span style="color:#D2A6FF"> 1024</span></span>
<span class="line"><span style="color:#BFBDB6">      }</span></span>
<span class="line"><span style="color:#BFBDB6">    }</span></span>
<span class="line"><span style="color:#BFBDB6">  })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#FF8F40">  return</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">    id</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">    connectionUrl</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">network</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">ports</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">game</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">url</span></span>
<span class="line"><span style="color:#BFBDB6">  }</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">}</span></span>
<span class="line"></span></code></pre>28:T1264,<pre class="shiki ayu-dark" style="background-color:#0c0a09;color:#bfbdb6" tabindex="0"><code><span class="line"><span style="color:#BFBDB6">app</span><span style="color:#F29668">.</span><span style="color:#FFB454">post</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">'/join-game'</span><span style="color:#BFBDB6B3">,</span><span style="color:#FF8F40"> async</span><span style="color:#BFBDB6"> (</span><span style="color:#D2A6FF">req</span><span style="color:#BFBDB6B3">,</span><span style="color:#D2A6FF"> res</span><span style="color:#BFBDB6">) </span><span style="color:#FF8F40">=></span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> { gameMode } </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> req</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">body</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">  // Find servers matching the requested game mode</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> { actors } </span><span style="color:#F29668">=</span><span style="color:#FF8F40"> await</span><span style="color:#BFBDB6"> rivet</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">actors</span><span style="color:#F29668">.</span><span style="color:#FFB454">list</span><span style="color:#BFBDB6">({</span></span>
<span class="line"><span style="color:#BFBDB6">    project</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_PROJECT_ID</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">    environment</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_ENVIRONMENT_ID</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">    tagsJson</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> JSON</span><span style="color:#F29668">.</span><span style="color:#FFB454">stringify</span><span style="color:#BFBDB6">({ </span></span>
<span class="line"><span style="color:#BFBDB6">      name</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "game-server"</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">      mode</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> gameMode</span></span>
<span class="line"><span style="color:#BFBDB6">    })</span></span>
<span class="line"><span style="color:#BFBDB6">  })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">  // Get the first available server</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> server </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> actors[</span><span style="color:#D2A6FF">0</span><span style="color:#BFBDB6">]</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">  // Return WebSocket URL to the client</span></span>
<span class="line"><span style="color:#BFBDB6">  res</span><span style="color:#F29668">.</span><span style="color:#FFB454">json</span><span style="color:#BFBDB6">({</span></span>
<span class="line"><span style="color:#BFBDB6">    connectionUrl</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> server</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">network</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">ports</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">game</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">url</span></span>
<span class="line"><span style="color:#BFBDB6">  })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#BFBDB6">})</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span></code></pre>29:T83a,<pre class="shiki ayu-dark" style="background-color:#0c0a09;color:#bfbdb6" tabindex="0"><code><span class="line"><span style="color:#FF8F40">async</span><span style="color:#FF8F40"> function</span><span style="color:#FFB454"> destroyGameServer</span><span style="color:#BFBDB6">(</span><span style="color:#D2A6FF">serverId</span><span style="color:#BFBDB6">) {</span></span>
<span class="line"><span style="color:#FF8F40">  await</span><span style="color:#BFBDB6"> rivet</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">actors</span><span style="color:#F29668">.</span><span style="color:#FFB454">destroy</span><span style="color:#BFBDB6">(serverId</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">    project</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_PROJECT_ID</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">    environment</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_ENVIRONMENT_ID</span></span>
<span class="line"><span style="color:#BFBDB6">  })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">`Game server </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">serverId</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C"> destroyed`</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">}</span></span>
<span class="line"></span></code></pre>2a:Tcce,<pre class="shiki ayu-dark" style="background-color:#0c0a09;color:#bfbdb6" tabindex="0"><code><span class="line"><span style="color:#ACB6BF8C;font-style:italic">// List available regions programmatically</span></span>
<span class="line"><span style="color:#FF8F40">async</span><span style="color:#FF8F40"> function</span><span style="color:#FFB454"> getAvailableRegions</span><span style="color:#BFBDB6">() {</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> client </span><span style="color:#F29668">=</span><span style="color:#F29668"> new</span><span style="color:#FFB454"> RivetClient</span><span style="color:#BFBDB6">({ token</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_TOKEN })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> { regions } </span><span style="color:#F29668">=</span><span style="color:#FF8F40"> await</span><span style="color:#BFBDB6"> client</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">regions</span><span style="color:#F29668">.</span><span style="color:#FFB454">list</span><span style="color:#BFBDB6">({})</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#BFBDB6">  console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">"Available regions:"</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">  for</span><span style="color:#BFBDB6"> (</span><span style="color:#FF8F40">const</span><span style="color:#BFBDB6"> region </span><span style="color:#F29668">of</span><span style="color:#BFBDB6"> regions) {</span></span>
<span class="line"><span style="color:#BFBDB6">    console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">`- </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">region</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C">: </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">region</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">name</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C">`</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  }</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#FF8F40">  return</span><span style="color:#BFBDB6"> regions</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">}</span></span>
<span class="line"></span></code></pre>2b:T896,<pre class="shiki ayu-dark" style="background-color:#0c0a09;color:#bfbdb6" tabindex="0"><code><span class="line"><span style="color:#ACB6BF8C;font-style:italic">// Get the best region for a player</span></span>
<span class="line"><span style="color:#FF8F40">async</span><span style="color:#FF8F40"> function</span><span style="color:#FFB454"> getBestRegionForPlayer</span><span style="color:#BFBDB6">() {</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> client </span><span style="color:#F29668">=</span><span style="color:#F29668"> new</span><span style="color:#FFB454"> RivetClient</span><span style="color:#BFBDB6">({})</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> { region } </span><span style="color:#F29668">=</span><span style="color:#FF8F40"> await</span><span style="color:#BFBDB6"> client</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">regions</span><span style="color:#F29668">.</span><span style="color:#FFB454">recommend</span><span style="color:#BFBDB6">({})</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#BFBDB6">  console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">`Recommended region for player: </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">region</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C">`</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">  return</span><span style="color:#BFBDB6"> region</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">}</span></span>
<span class="line"></span></code></pre>2c:T747e,<pre class="shiki ayu-dark" style="background-color:#0c0a09;color:#bfbdb6" tabindex="0"><code><span class="line"><span style="color:#FF8F40">import</span><span style="color:#BFBDB6"> { writeFileSync } </span><span style="color:#FF8F40">from</span><span style="color:#AAD94C"> 'fs'</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">// Define target server count per region</span></span>
<span class="line"><span style="color:#FF8F40">const</span><span style="color:#BFBDB6"> TARGET_SERVERS_BY_REGION </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#AAD94C">  "atl"</span><span style="color:#BFBDB6B3">:</span><span style="color:#D2A6FF"> 2</span><span style="color:#BFBDB6B3">,</span><span style="color:#ACB6BF8C;font-style:italic">  // Atlanta: 2 servers</span></span>
<span class="line"><span style="color:#AAD94C">  "fra"</span><span style="color:#BFBDB6B3">:</span><span style="color:#D2A6FF"> 1</span><span style="color:#BFBDB6B3">,</span><span style="color:#ACB6BF8C;font-style:italic">  // Frankfurt: 1 server</span></span>
<span class="line"><span style="color:#AAD94C">  "syd"</span><span style="color:#BFBDB6B3">:</span><span style="color:#D2A6FF"> 2</span><span style="color:#ACB6BF8C;font-style:italic">   // Sydney: 2 servers</span></span>
<span class="line"><span style="color:#BFBDB6">}</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">// Maintains a fixed number of game servers across regions</span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">// This function is idempotent - running it multiple times will maintain the desired number of servers</span></span>
<span class="line"><span style="color:#FF8F40">async</span><span style="color:#FF8F40"> function</span><span style="color:#FFB454"> manageServers</span><span style="color:#BFBDB6">() {</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> client </span><span style="color:#F29668">=</span><span style="color:#F29668"> new</span><span style="color:#FFB454"> RivetClient</span><span style="color:#BFBDB6">({ token</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_TOKEN })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> serverMap </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> { regions</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> {} }</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">  // Process each region</span></span>
<span class="line"><span style="color:#FF8F40">  for</span><span style="color:#BFBDB6"> (</span><span style="color:#FF8F40">const</span><span style="color:#BFBDB6"> [region</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> targetCount] </span><span style="color:#F29668">of</span><span style="color:#BFBDB6"> Object</span><span style="color:#F29668">.</span><span style="color:#FFB454">entries</span><span style="color:#BFBDB6">(TARGET_SERVERS_BY_REGION)) {</span></span>
<span class="line"><span style="color:#BFBDB6">    serverMap</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">regions[region] </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> {}</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">    </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">    // Find existing servers in this region</span></span>
<span class="line"><span style="color:#FF8F40">    const</span><span style="color:#BFBDB6"> { actors } </span><span style="color:#F29668">=</span><span style="color:#FF8F40"> await</span><span style="color:#BFBDB6"> client</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">actors</span><span style="color:#F29668">.</span><span style="color:#FFB454">list</span><span style="color:#BFBDB6">({</span></span>
<span class="line"><span style="color:#BFBDB6">      tagsJson</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> JSON</span><span style="color:#F29668">.</span><span style="color:#FFB454">stringify</span><span style="color:#BFBDB6">({ </span></span>
<span class="line"><span style="color:#BFBDB6">        name</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "game-server"</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">        region</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> region </span></span>
<span class="line"><span style="color:#BFBDB6">      })</span></span>
<span class="line"><span style="color:#BFBDB6">    })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">    </span></span>
<span class="line"><span style="color:#FF8F40">    const</span><span style="color:#BFBDB6"> existingServers </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> actors</span><span style="color:#F29668">.</span><span style="color:#FFB454">map</span><span style="color:#BFBDB6">(</span><span style="color:#D2A6FF">actor</span><span style="color:#FF8F40"> =></span><span style="color:#BFBDB6"> ({</span></span>
<span class="line"><span style="color:#BFBDB6">      id</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">      serverId</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">tags</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">server_id</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">      region</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">tags</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">region</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">      url</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">network</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">ports</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">game</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">url</span></span>
<span class="line"><span style="color:#BFBDB6">    }))</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">    // Print existing server URLs</span></span>
<span class="line"><span style="color:#BFBDB6">    existingServers</span><span style="color:#F29668">.</span><span style="color:#FFB454">forEach</span><span style="color:#BFBDB6">(</span><span style="color:#D2A6FF">server</span><span style="color:#FF8F40"> =></span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">      console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">`Existing server: </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">server</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">serverId</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C"> - </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">server</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">url</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C">`</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">    })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">    // Calculate how many servers to add or remove</span></span>
<span class="line"><span style="color:#FF8F40">    const</span><span style="color:#BFBDB6"> diff </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> targetCount </span><span style="color:#F29668">-</span><span style="color:#BFBDB6"> existingServers</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">length</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">    console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">`Need to </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">diff </span><span style="color:#F29668">></span><span style="color:#D2A6FF"> 0</span><span style="color:#F29668"> ?</span><span style="color:#AAD94C"> 'add'</span><span style="color:#F29668"> :</span><span style="color:#AAD94C"> 'remove'</span><span style="color:#FF8F40">}</span><span style="color:#FF8F40"> ${</span><span style="color:#BFBDB6">Math</span><span style="color:#F29668">.</span><span style="color:#FFB454">abs</span><span style="color:#BFBDB6">(diff)</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C"> servers`</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">    </span></span>
<span class="line"><span style="color:#FF8F40">    if</span><span style="color:#BFBDB6"> (diff </span><span style="color:#F29668">></span><span style="color:#D2A6FF"> 0</span><span style="color:#BFBDB6">) {</span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">      // Need to create more servers</span></span>
<span class="line"><span style="color:#FF8F40">      for</span><span style="color:#BFBDB6"> (</span><span style="color:#FF8F40">let</span><span style="color:#BFBDB6"> i </span><span style="color:#F29668">=</span><span style="color:#D2A6FF"> 0</span><span style="color:#BFBDB6B3">;</span><span style="color:#BFBDB6"> i </span><span style="color:#F29668">&#x3C;</span><span style="color:#BFBDB6"> diff</span><span style="color:#BFBDB6B3">;</span><span style="color:#BFBDB6"> i</span><span style="color:#F29668">++</span><span style="color:#BFBDB6">) {</span></span>
<span class="line"><span style="color:#FF8F40">        const</span><span style="color:#BFBDB6"> serverId </span><span style="color:#F29668">=</span><span style="color:#AAD94C"> `server-</span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">region</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C">-</span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">existingServers</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">length </span><span style="color:#F29668">+</span><span style="color:#BFBDB6"> i</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C">`</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">        console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">`Creating new server: </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">serverId</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C">`</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">        </span></span>
<span class="line"><span style="color:#FF8F40">        const</span><span style="color:#BFBDB6"> { actor } </span><span style="color:#F29668">=</span><span style="color:#FF8F40"> await</span><span style="color:#BFBDB6"> client</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">actors</span><span style="color:#F29668">.</span><span style="color:#FFB454">create</span><span style="color:#BFBDB6">({</span></span>
<span class="line"><span style="color:#BFBDB6">          project</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_PROJECT_ID</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">          environment</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_ENVIRONMENT_ID</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">          body</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">            region</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> region</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">            tags</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> { </span></span>
<span class="line"><span style="color:#BFBDB6">              name</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "game-server"</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">              server_id</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> serverId</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">              region</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> region</span></span>
<span class="line"><span style="color:#BFBDB6">            }</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">            buildTags</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> { name</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "game-server"</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> current</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "true"</span><span style="color:#BFBDB6"> }</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">            network</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">              ports</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">                game</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> { protocol</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "https"</span><span style="color:#BFBDB6"> }</span></span>
<span class="line"><span style="color:#BFBDB6">              }</span></span>
<span class="line"><span style="color:#BFBDB6">            }</span></span>
<span class="line"><span style="color:#BFBDB6">            }</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">            lifecycle</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> { </span></span>
<span class="line"><span style="color:#BFBDB6">              durable</span><span style="color:#BFBDB6B3">:</span><span style="color:#D2A6FF"> true</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">              idle_timeout</span><span style="color:#BFBDB6B3">:</span><span style="color:#D2A6FF"> 300</span><span style="color:#ACB6BF8C;font-style:italic">  // 5 minutes idle timeout</span></span>
<span class="line"><span style="color:#BFBDB6">            } </span></span>
<span class="line"><span style="color:#BFBDB6">        })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">        </span></span>
<span class="line"><span style="color:#BFBDB6">        console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">`Created server </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">serverId</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C"> with URL: </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">network</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">ports</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">game</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">url</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C">`</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">        </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">        // Add this server to our map</span></span>
<span class="line"><span style="color:#BFBDB6">        serverMap</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">regions[region][serverId] </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">          url</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">network</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">ports</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">game</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">url</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">          id</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id</span></span>
<span class="line"><span style="color:#BFBDB6">        }</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">      }</span></span>
<span class="line"><span style="color:#BFBDB6">    } </span><span style="color:#FF8F40">else</span><span style="color:#FF8F40"> if</span><span style="color:#BFBDB6"> (diff </span><span style="color:#F29668">&#x3C;</span><span style="color:#D2A6FF"> 0</span><span style="color:#BFBDB6">) {</span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">      // Need to remove some servers - take the oldest ones first</span></span>
<span class="line"><span style="color:#FF8F40">      const</span><span style="color:#BFBDB6"> serversToRemove </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> existingServers</span><span style="color:#F29668">.</span><span style="color:#FFB454">slice</span><span style="color:#BFBDB6">(</span><span style="color:#D2A6FF">0</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> Math</span><span style="color:#F29668">.</span><span style="color:#FFB454">abs</span><span style="color:#BFBDB6">(diff))</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">      const</span><span style="color:#BFBDB6"> serversToKeep </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> existingServers</span><span style="color:#F29668">.</span><span style="color:#FFB454">slice</span><span style="color:#BFBDB6">(Math</span><span style="color:#F29668">.</span><span style="color:#FFB454">abs</span><span style="color:#BFBDB6">(diff))</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">      </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">      // Add servers we're keeping to the map</span></span>
<span class="line"><span style="color:#FF8F40">      for</span><span style="color:#BFBDB6"> (</span><span style="color:#FF8F40">const</span><span style="color:#BFBDB6"> server </span><span style="color:#F29668">of</span><span style="color:#BFBDB6"> serversToKeep) {</span></span>
<span class="line"><span style="color:#BFBDB6">        console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">`Keeping server: </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">server</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">serverId</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C"> - </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">server</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">url</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C">`</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">        serverMap</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">regions[region][server</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">serverId] </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">          url</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> server</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">url</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">          id</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> server</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id</span></span>
<span class="line"><span style="color:#BFBDB6">        }</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">      }</span></span>
<span class="line"><span style="color:#BFBDB6">      </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">      // Destroy the excess servers</span></span>
<span class="line"><span style="color:#FF8F40">      for</span><span style="color:#BFBDB6"> (</span><span style="color:#FF8F40">const</span><span style="color:#BFBDB6"> server </span><span style="color:#F29668">of</span><span style="color:#BFBDB6"> serversToRemove) {</span></span>
<span class="line"><span style="color:#BFBDB6">        console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">`Removing server: </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">server</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">serverId</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C">`</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">        await</span><span style="color:#BFBDB6"> client</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">actors</span><span style="color:#F29668">.</span><span style="color:#FFB454">destroy</span><span style="color:#BFBDB6">(server</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">          project</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_PROJECT_ID</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">          environment</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_ENVIRONMENT_ID</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">        })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">      }</span></span>
<span class="line"><span style="color:#BFBDB6">    } </span><span style="color:#FF8F40">else</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">      // We have exactly the right number of servers</span></span>
<span class="line"><span style="color:#FF8F40">      for</span><span style="color:#BFBDB6"> (</span><span style="color:#FF8F40">const</span><span style="color:#BFBDB6"> server </span><span style="color:#F29668">of</span><span style="color:#BFBDB6"> existingServers) {</span></span>
<span class="line"><span style="color:#BFBDB6">        console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">`Keeping existing server: </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">server</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">serverId</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C"> - </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">server</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">url</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C">`</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">        serverMap</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">regions[region][server</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">serverId] </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">          url</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> server</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">url</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">          id</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> server</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id</span></span>
<span class="line"><span style="color:#BFBDB6">        }</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">      }</span></span>
<span class="line"><span style="color:#BFBDB6">    }</span></span>
<span class="line"><span style="color:#BFBDB6">  }</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#FF8F40">  return</span><span style="color:#BFBDB6"> serverMap</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">// This script will output a list of server connection URLs that you can copy &#x26; paste in your game's frontend to show a server list</span></span>
<span class="line"><span style="color:#FF8F40">async</span><span style="color:#FF8F40"> function</span><span style="color:#FFB454"> main</span><span style="color:#BFBDB6">() {</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> serverMap </span><span style="color:#F29668">=</span><span style="color:#FF8F40"> await</span><span style="color:#FFB454"> manageServers</span><span style="color:#BFBDB6">()</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FFB454">  writeFileSync</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">'server-map.json'</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> JSON</span><span style="color:#F29668">.</span><span style="color:#FFB454">stringify</span><span style="color:#BFBDB6">(serverMap</span><span style="color:#BFBDB6B3">,</span><span style="color:#D2A6FF"> null</span><span style="color:#BFBDB6B3">,</span><span style="color:#D2A6FF"> 2</span><span style="color:#BFBDB6">))</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">`Server map saved to server-map.json`</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre>2d:T59a7,<pre class="shiki ayu-dark" style="background-color:#0c0a09;color:#bfbdb6" tabindex="0"><code><span class="line"><span style="color:#FF8F40">import</span><span style="color:#BFBDB6"> { RivetClient } </span><span style="color:#FF8F40">from</span><span style="color:#AAD94C"> '@rivet-gg/api'</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">// Initialize the Rivet client</span></span>
<span class="line"><span style="color:#FF8F40">const</span><span style="color:#BFBDB6"> client </span><span style="color:#F29668">=</span><span style="color:#F29668"> new</span><span style="color:#FFB454"> RivetClient</span><span style="color:#BFBDB6">({ token</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_TOKEN })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">// Configuration</span></span>
<span class="line"><span style="color:#FF8F40">const</span><span style="color:#BFBDB6"> SCALING_CHECK_INTERVAL </span><span style="color:#F29668">=</span><span style="color:#D2A6FF"> 60000</span><span style="color:#BFBDB6B3">;</span><span style="color:#ACB6BF8C;font-style:italic"> // Check every minute</span></span>
<span class="line"><span style="color:#FF8F40">const</span><span style="color:#BFBDB6"> TARGET_PLAYER_PER_SERVER </span><span style="color:#F29668">=</span><span style="color:#D2A6FF"> 10</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">const</span><span style="color:#BFBDB6"> MIN_SERVERS </span><span style="color:#F29668">=</span><span style="color:#D2A6FF"> 2</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">const</span><span style="color:#BFBDB6"> MAX_SERVERS </span><span style="color:#F29668">=</span><span style="color:#D2A6FF"> 20</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">// Start the scaling loop</span></span>
<span class="line"><span style="color:#BFBDB6">console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">"Starting server scaling service..."</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FFB454">setInterval</span><span style="color:#BFBDB6">(checkAndAdjustServerCapacity</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> SCALING_CHECK_INTERVAL)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">// Function to check and adjust server capacity</span></span>
<span class="line"><span style="color:#FF8F40">async</span><span style="color:#FF8F40"> function</span><span style="color:#FFB454"> checkAndAdjustServerCapacity</span><span style="color:#BFBDB6">() {</span></span>
<span class="line"><span style="color:#BFBDB6">  console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">"Running scaling check..."</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#FF8F40">  try</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">    // 1. Get current servers and their metrics</span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">    // See [actors.list](/docs/cloud/api/actors/list) for more filtering options</span></span>
<span class="line"><span style="color:#FF8F40">    const</span><span style="color:#BFBDB6"> { actors } </span><span style="color:#F29668">=</span><span style="color:#FF8F40"> await</span><span style="color:#BFBDB6"> client</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">actors</span><span style="color:#F29668">.</span><span style="color:#FFB454">list</span><span style="color:#BFBDB6">({</span></span>
<span class="line"><span style="color:#BFBDB6">      tagsJson</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> JSON</span><span style="color:#F29668">.</span><span style="color:#FFB454">stringify</span><span style="color:#BFBDB6">({ name</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "game-server"</span><span style="color:#BFBDB6"> })</span></span>
<span class="line"><span style="color:#BFBDB6">    })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">    </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">    // 2. Query each server for player count</span></span>
<span class="line"><span style="color:#FF8F40">    let</span><span style="color:#BFBDB6"> totalPlayers </span><span style="color:#F29668">=</span><span style="color:#D2A6FF"> 0</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">    let</span><span style="color:#BFBDB6"> activeServers </span><span style="color:#F29668">=</span><span style="color:#D2A6FF"> 0</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">    </span></span>
<span class="line"><span style="color:#FF8F40">    for</span><span style="color:#BFBDB6"> (</span><span style="color:#FF8F40">const</span><span style="color:#BFBDB6"> actor </span><span style="color:#F29668">of</span><span style="color:#BFBDB6"> actors) {</span></span>
<span class="line"><span style="color:#FF8F40">      try</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#FF8F40">        const</span><span style="color:#BFBDB6"> statsUrl </span><span style="color:#F29668">=</span><span style="color:#AAD94C"> `</span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">network</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">ports</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">http</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">url</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C">/stats`</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">        const</span><span style="color:#BFBDB6"> response </span><span style="color:#F29668">=</span><span style="color:#FF8F40"> await</span><span style="color:#FFB454"> fetch</span><span style="color:#BFBDB6">(statsUrl)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">        const</span><span style="color:#BFBDB6"> stats </span><span style="color:#F29668">=</span><span style="color:#FF8F40"> await</span><span style="color:#BFBDB6"> response</span><span style="color:#F29668">.</span><span style="color:#FFB454">json</span><span style="color:#BFBDB6">()</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">        </span></span>
<span class="line"><span style="color:#BFBDB6">        totalPlayers </span><span style="color:#F29668">+=</span><span style="color:#BFBDB6"> stats</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">playerCount</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">        if</span><span style="color:#BFBDB6"> (stats</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">playerCount </span><span style="color:#F29668">></span><span style="color:#D2A6FF"> 0</span><span style="color:#BFBDB6">) activeServers</span><span style="color:#F29668">++</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">      } </span><span style="color:#FF8F40">catch</span><span style="color:#BFBDB6"> (err) {</span></span>
<span class="line"><span style="color:#BFBDB6">        console</span><span style="color:#F29668">.</span><span style="color:#FFB454">error</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">`Failed to get stats for server </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C">`</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> err)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">      }</span></span>
<span class="line"><span style="color:#BFBDB6">    }</span></span>
<span class="line"><span style="color:#BFBDB6">    </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">    // 3. Apply scaling logic</span></span>
<span class="line"><span style="color:#FF8F40">    let</span><span style="color:#BFBDB6"> targetServers </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> Math</span><span style="color:#F29668">.</span><span style="color:#FFB454">max</span><span style="color:#BFBDB6">(</span></span>
<span class="line"><span style="color:#BFBDB6">      MIN_SERVERS</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">      Math</span><span style="color:#F29668">.</span><span style="color:#FFB454">min</span><span style="color:#BFBDB6">(</span></span>
<span class="line"><span style="color:#BFBDB6">        MAX_SERVERS</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">        Math</span><span style="color:#F29668">.</span><span style="color:#FFB454">ceil</span><span style="color:#BFBDB6">(totalPlayers </span><span style="color:#F29668">/</span><span style="color:#BFBDB6"> TARGET_PLAYER_PER_SERVER) </span><span style="color:#F29668">+</span><span style="color:#D2A6FF"> 1</span><span style="color:#ACB6BF8C;font-style:italic"> // +1 for buffer</span></span>
<span class="line"><span style="color:#BFBDB6">      )</span></span>
<span class="line"><span style="color:#BFBDB6">    )</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">    </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">    // 4. Adjust server count</span></span>
<span class="line"><span style="color:#FF8F40">    if</span><span style="color:#BFBDB6"> (actors</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">length </span><span style="color:#F29668">&#x3C;</span><span style="color:#BFBDB6"> targetServers) {</span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">      // Create additional servers</span></span>
<span class="line"><span style="color:#BFBDB6">      console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">`Scaling up: </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">actors</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">length</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C"> → </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">targetServers</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C"> servers`</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">      for</span><span style="color:#BFBDB6"> (</span><span style="color:#FF8F40">let</span><span style="color:#BFBDB6"> i </span><span style="color:#F29668">=</span><span style="color:#D2A6FF"> 0</span><span style="color:#BFBDB6B3">;</span><span style="color:#BFBDB6"> i </span><span style="color:#F29668">&#x3C;</span><span style="color:#BFBDB6"> targetServers </span><span style="color:#F29668">-</span><span style="color:#BFBDB6"> actors</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">length</span><span style="color:#BFBDB6B3">;</span><span style="color:#BFBDB6"> i</span><span style="color:#F29668">++</span><span style="color:#BFBDB6">) {</span></span>
<span class="line"><span style="color:#FF8F40">        await</span><span style="color:#BFBDB6"> client</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">actors</span><span style="color:#F29668">.</span><span style="color:#FFB454">create</span><span style="color:#BFBDB6">({</span></span>
<span class="line"><span style="color:#BFBDB6">          body</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">            tags</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> { </span></span>
<span class="line"><span style="color:#BFBDB6">              name</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "game-server"</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">              server_id</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> `dynamic-</span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">Date</span><span style="color:#F29668">.</span><span style="color:#FFB454">now</span><span style="color:#BFBDB6">()</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C">-</span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">i</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C">`</span></span>
<span class="line"><span style="color:#BFBDB6">            }</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">            buildTags</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> { name</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "game-server"</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> current</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "true"</span><span style="color:#BFBDB6"> }</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">            network</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">              ports</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">                game</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> { protocol</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "https"</span><span style="color:#BFBDB6"> }</span></span>
<span class="line"><span style="color:#BFBDB6">              }</span></span>
<span class="line"><span style="color:#BFBDB6">            }</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">            resources</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> { cpu</span><span style="color:#BFBDB6B3">:</span><span style="color:#D2A6FF"> 1000</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> memory</span><span style="color:#BFBDB6B3">:</span><span style="color:#D2A6FF"> 1024</span><span style="color:#BFBDB6"> }</span></span>
<span class="line"><span style="color:#BFBDB6">          }</span></span>
<span class="line"><span style="color:#BFBDB6">        })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">      }</span></span>
<span class="line"><span style="color:#BFBDB6">    } </span><span style="color:#FF8F40">else</span><span style="color:#FF8F40"> if</span><span style="color:#BFBDB6"> (actors</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">length </span><span style="color:#F29668">></span><span style="color:#BFBDB6"> targetServers) {</span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">	  // NOTE: You likely want to wait for the server to have 0 players before destroying</span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">      // Find empty servers to remove</span></span>
<span class="line"><span style="color:#FF8F40">      const</span><span style="color:#BFBDB6"> serversToRemove </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> actors</span><span style="color:#F29668">.</span><span style="color:#FFB454">slice</span><span style="color:#BFBDB6">(</span><span style="color:#D2A6FF">0</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> actors</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">length </span><span style="color:#F29668">-</span><span style="color:#BFBDB6"> targetServers)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">      </span></span>
<span class="line"><span style="color:#FF8F40">      if</span><span style="color:#BFBDB6"> (serversToRemove</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">length </span><span style="color:#F29668">></span><span style="color:#D2A6FF"> 0</span><span style="color:#BFBDB6">) {</span></span>
<span class="line"><span style="color:#BFBDB6">        console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">`Scaling down: </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">actors</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">length</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C"> → </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">actors</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">length </span><span style="color:#F29668">-</span><span style="color:#BFBDB6"> serversToRemove</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">length</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C"> servers`</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">        </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">        // Destroy unused servers</span></span>
<span class="line"><span style="color:#FF8F40">        for</span><span style="color:#BFBDB6"> (</span><span style="color:#FF8F40">const</span><span style="color:#BFBDB6"> server </span><span style="color:#F29668">of</span><span style="color:#BFBDB6"> serversToRemove) {</span></span>
<span class="line"><span style="color:#FF8F40">          await</span><span style="color:#BFBDB6"> client</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">actors</span><span style="color:#F29668">.</span><span style="color:#FFB454">destroy</span><span style="color:#BFBDB6">(server</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">            project</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_PROJECT_ID</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">            environment</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_ENVIRONMENT_ID</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">          })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">          console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">`Destroyed empty server: </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">server</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C">`</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">        }</span></span>
<span class="line"><span style="color:#BFBDB6">      }</span></span>
<span class="line"><span style="color:#BFBDB6">    }</span></span>
<span class="line"><span style="color:#BFBDB6">    </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">    // Log the current state</span></span>
<span class="line"><span style="color:#BFBDB6">    console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">`Scaling check complete. </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">activeServers</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C">/</span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">actors</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">length</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C"> servers active, </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">totalPlayers</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C"> total players`</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  } </span><span style="color:#FF8F40">catch</span><span style="color:#BFBDB6"> (error) {</span></span>
<span class="line"><span style="color:#BFBDB6">    console</span><span style="color:#F29668">.</span><span style="color:#FFB454">error</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">"Error in scaling check:"</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> error)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  }</span></span>
<span class="line"><span style="color:#BFBDB6">}</span></span>
<span class="line"></span></code></pre>2e:T51fa,<pre class="shiki ayu-dark" style="background-color:#0c0a09;color:#bfbdb6" tabindex="0"><code><span class="line"><span style="color:#FF8F40">import</span><span style="color:#BFBDB6"> { Hono } </span><span style="color:#FF8F40">from</span><span style="color:#AAD94C"> 'hono'</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">import</span><span style="color:#BFBDB6"> { RivetClient } </span><span style="color:#FF8F40">from</span><span style="color:#AAD94C"> '@rivet-gg/api'</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF8F40">const</span><span style="color:#BFBDB6"> app </span><span style="color:#F29668">=</span><span style="color:#F29668"> new</span><span style="color:#FFB454"> Hono</span><span style="color:#BFBDB6">()</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">const</span><span style="color:#BFBDB6"> client </span><span style="color:#F29668">=</span><span style="color:#F29668"> new</span><span style="color:#FFB454"> RivetClient</span><span style="color:#BFBDB6">({ token</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_TOKEN })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">// In-memory lobby tracking (use a database for production)</span></span>
<span class="line"><span style="color:#FF8F40">let</span><span style="color:#BFBDB6"> lobbies </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> []</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">// Player requests to join a lobby</span></span>
<span class="line"><span style="color:#BFBDB6">app</span><span style="color:#F29668">.</span><span style="color:#FFB454">post</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">'/lobbies/join'</span><span style="color:#BFBDB6B3">,</span><span style="color:#FF8F40"> async</span><span style="color:#BFBDB6"> (</span><span style="color:#D2A6FF">c</span><span style="color:#BFBDB6">) </span><span style="color:#FF8F40">=></span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> { playerId } </span><span style="color:#F29668">=</span><span style="color:#FF8F40"> await</span><span style="color:#BFBDB6"> c</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">req</span><span style="color:#F29668">.</span><span style="color:#FFB454">json</span><span style="color:#BFBDB6">()</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">  // Find a lobby with space</span></span>
<span class="line"><span style="color:#FF8F40">  let</span><span style="color:#BFBDB6"> lobby </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> lobbies</span><span style="color:#F29668">.</span><span style="color:#FFB454">find</span><span style="color:#BFBDB6">(</span><span style="color:#D2A6FF">l</span><span style="color:#FF8F40"> =></span><span style="color:#BFBDB6"> l</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">playerCount </span><span style="color:#F29668">&#x3C;</span><span style="color:#BFBDB6"> l</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">maxPlayers)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">  // Create a new lobby if none available</span></span>
<span class="line"><span style="color:#FF8F40">  if</span><span style="color:#BFBDB6"> (</span><span style="color:#F29668">!</span><span style="color:#BFBDB6">lobby) {</span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">    // Create a new server actor</span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">    // See [actors.create](/docs/cloud/api/actors/create)</span></span>
<span class="line"><span style="color:#FF8F40">    const</span><span style="color:#BFBDB6"> { actor } </span><span style="color:#F29668">=</span><span style="color:#FF8F40"> await</span><span style="color:#BFBDB6"> client</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">actors</span><span style="color:#F29668">.</span><span style="color:#FFB454">create</span><span style="color:#BFBDB6">({</span></span>
<span class="line"><span style="color:#BFBDB6">      body</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">        tags</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> { </span></span>
<span class="line"><span style="color:#BFBDB6">          name</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "game-lobby"</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">          created_at</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> Date</span><span style="color:#F29668">.</span><span style="color:#FFB454">now</span><span style="color:#BFBDB6">()</span><span style="color:#F29668">.</span><span style="color:#FFB454">toString</span><span style="color:#BFBDB6">()</span></span>
<span class="line"><span style="color:#BFBDB6">        }</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">        buildTags</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> { name</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "game-server"</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> current</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "true"</span><span style="color:#BFBDB6"> }</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">        network</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">          ports</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">            game</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> { protocol</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "https"</span><span style="color:#BFBDB6"> }</span></span>
<span class="line"><span style="color:#BFBDB6">          }</span></span>
<span class="line"><span style="color:#BFBDB6">        }</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">        resources</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> { cpu</span><span style="color:#BFBDB6B3">:</span><span style="color:#D2A6FF"> 1000</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> memory</span><span style="color:#BFBDB6B3">:</span><span style="color:#D2A6FF"> 1024</span><span style="color:#BFBDB6"> }</span></span>
<span class="line"><span style="color:#BFBDB6">      }</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">    })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">    </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">    // Track the new lobby</span></span>
<span class="line"><span style="color:#BFBDB6">    lobby </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">      id</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">      players</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> []</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">      maxPlayers</span><span style="color:#BFBDB6B3">:</span><span style="color:#D2A6FF"> 8</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">      gameUrl</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">network</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">ports</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">game</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">url</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">      createdAt</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> Date</span><span style="color:#F29668">.</span><span style="color:#FFB454">now</span><span style="color:#BFBDB6">()</span></span>
<span class="line"><span style="color:#BFBDB6">    }</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">    </span></span>
<span class="line"><span style="color:#BFBDB6">    lobbies</span><span style="color:#F29668">.</span><span style="color:#FFB454">push</span><span style="color:#BFBDB6">(lobby)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  }</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">  // Add player to lobby</span></span>
<span class="line"><span style="color:#BFBDB6">  lobby</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">players</span><span style="color:#F29668">.</span><span style="color:#FFB454">push</span><span style="color:#BFBDB6">(playerId)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">  // Return connection info to the player</span></span>
<span class="line"><span style="color:#FF8F40">  return</span><span style="color:#BFBDB6"> c</span><span style="color:#F29668">.</span><span style="color:#FFB454">json</span><span style="color:#BFBDB6">({</span></span>
<span class="line"><span style="color:#BFBDB6">    lobbyId</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> lobby</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">    connectionInfo</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">      gameUrl</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> lobby</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">gameUrl</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">    }</span></span>
<span class="line"><span style="color:#BFBDB6">  })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">})</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">// Server reports player disconnection</span></span>
<span class="line"><span style="color:#BFBDB6">app</span><span style="color:#F29668">.</span><span style="color:#FFB454">post</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">'/lobbies/:lobbyId/player-disconnected'</span><span style="color:#BFBDB6B3">,</span><span style="color:#FF8F40"> async</span><span style="color:#BFBDB6"> (</span><span style="color:#D2A6FF">c</span><span style="color:#BFBDB6">) </span><span style="color:#FF8F40">=></span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> lobbyId </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> c</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">req</span><span style="color:#F29668">.</span><span style="color:#FFB454">param</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">'lobbyId'</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> { playerId } </span><span style="color:#F29668">=</span><span style="color:#FF8F40"> await</span><span style="color:#BFBDB6"> c</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">req</span><span style="color:#F29668">.</span><span style="color:#FFB454">json</span><span style="color:#BFBDB6">()</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> lobby </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> lobbies</span><span style="color:#F29668">.</span><span style="color:#FFB454">find</span><span style="color:#BFBDB6">(</span><span style="color:#D2A6FF">l</span><span style="color:#FF8F40"> =></span><span style="color:#BFBDB6"> l</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id </span><span style="color:#F29668">===</span><span style="color:#BFBDB6"> lobbyId)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">  if</span><span style="color:#BFBDB6"> (</span><span style="color:#F29668">!</span><span style="color:#BFBDB6">lobby) </span><span style="color:#FF8F40">return</span><span style="color:#BFBDB6"> c</span><span style="color:#F29668">.</span><span style="color:#FFB454">json</span><span style="color:#BFBDB6">({ error</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "Lobby not found"</span><span style="color:#BFBDB6"> }</span><span style="color:#BFBDB6B3">,</span><span style="color:#D2A6FF"> 404</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">  // Remove player</span></span>
<span class="line"><span style="color:#BFBDB6">  lobby</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">players </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> lobby</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">players</span><span style="color:#F29668">.</span><span style="color:#FFB454">filter</span><span style="color:#BFBDB6">(</span><span style="color:#D2A6FF">id</span><span style="color:#FF8F40"> =></span><span style="color:#BFBDB6"> id </span><span style="color:#F29668">!==</span><span style="color:#BFBDB6"> playerId)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">  // Destroy empty lobby after a grace period</span></span>
<span class="line"><span style="color:#FF8F40">  if</span><span style="color:#BFBDB6"> (lobby</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">players</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">length </span><span style="color:#F29668">===</span><span style="color:#D2A6FF"> 0</span><span style="color:#BFBDB6">) {</span></span>
<span class="line"><span style="color:#FFB454">    setTimeout</span><span style="color:#BFBDB6">(</span><span style="color:#FF8F40">async</span><span style="color:#BFBDB6"> () </span><span style="color:#FF8F40">=></span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">      // Check again in case players joined during grace period</span></span>
<span class="line"><span style="color:#FF8F40">      const</span><span style="color:#BFBDB6"> currentLobby </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> lobbies</span><span style="color:#F29668">.</span><span style="color:#FFB454">find</span><span style="color:#BFBDB6">(</span><span style="color:#D2A6FF">l</span><span style="color:#FF8F40"> =></span><span style="color:#BFBDB6"> l</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id </span><span style="color:#F29668">===</span><span style="color:#BFBDB6"> lobbyId)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">      if</span><span style="color:#BFBDB6"> (currentLobby </span><span style="color:#F29668">&#x26;&#x26;</span><span style="color:#BFBDB6"> currentLobby</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">players</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">length </span><span style="color:#F29668">===</span><span style="color:#D2A6FF"> 0</span><span style="color:#BFBDB6">) {</span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">        // Destroy the actor</span></span>
<span class="line"><span style="color:#FF8F40">        await</span><span style="color:#BFBDB6"> client</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">actors</span><span style="color:#F29668">.</span><span style="color:#FFB454">destroy</span><span style="color:#BFBDB6">(lobbyId</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">          project</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_PROJECT_ID</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">          environment</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_ENVIRONMENT_ID</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">        })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">        // Remove from tracking</span></span>
<span class="line"><span style="color:#BFBDB6">        lobbies </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> lobbies</span><span style="color:#F29668">.</span><span style="color:#FFB454">filter</span><span style="color:#BFBDB6">(</span><span style="color:#D2A6FF">l</span><span style="color:#FF8F40"> =></span><span style="color:#BFBDB6"> l</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id </span><span style="color:#F29668">!==</span><span style="color:#BFBDB6"> lobbyId)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">      }</span></span>
<span class="line"><span style="color:#BFBDB6">    }</span><span style="color:#BFBDB6B3">,</span><span style="color:#D2A6FF"> 5</span><span style="color:#F29668"> *</span><span style="color:#D2A6FF"> 60</span><span style="color:#F29668"> *</span><span style="color:#D2A6FF"> 1000</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span><span style="color:#ACB6BF8C;font-style:italic"> // 5 minute grace period</span></span>
<span class="line"><span style="color:#BFBDB6">  }</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#FF8F40">  return</span><span style="color:#BFBDB6"> c</span><span style="color:#F29668">.</span><span style="color:#FFB454">json</span><span style="color:#BFBDB6">({ success</span><span style="color:#BFBDB6B3">:</span><span style="color:#D2A6FF"> true</span><span style="color:#BFBDB6"> })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">})</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF8F40">export</span><span style="color:#FF8F40"> default</span><span style="color:#BFBDB6"> app</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span></code></pre>2f:T52d2,<pre class="shiki ayu-dark" style="background-color:#0c0a09;color:#bfbdb6" tabindex="0"><code><span class="line"><span style="color:#FF8F40">import</span><span style="color:#BFBDB6"> { Hono } </span><span style="color:#FF8F40">from</span><span style="color:#AAD94C"> 'hono'</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">import</span><span style="color:#BFBDB6"> { RivetClient } </span><span style="color:#FF8F40">from</span><span style="color:#AAD94C"> '@rivet-gg/api'</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF8F40">const</span><span style="color:#BFBDB6"> app </span><span style="color:#F29668">=</span><span style="color:#F29668"> new</span><span style="color:#FFB454"> Hono</span><span style="color:#BFBDB6">()</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">const</span><span style="color:#BFBDB6"> client </span><span style="color:#F29668">=</span><span style="color:#F29668"> new</span><span style="color:#FFB454"> RivetClient</span><span style="color:#BFBDB6">({ token</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_TOKEN })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">// Create a custom lobby with specific settings</span></span>
<span class="line"><span style="color:#BFBDB6">app</span><span style="color:#F29668">.</span><span style="color:#FFB454">post</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">'/lobbies/custom'</span><span style="color:#BFBDB6B3">,</span><span style="color:#FF8F40"> async</span><span style="color:#BFBDB6"> (</span><span style="color:#D2A6FF">c</span><span style="color:#BFBDB6">) </span><span style="color:#FF8F40">=></span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> { </span></span>
<span class="line"><span style="color:#BFBDB6">    playerId</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">    gameMode</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">    mapName</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">    playerLimit</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">    isPrivate</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">    password</span></span>
<span class="line"><span style="color:#BFBDB6">  } </span><span style="color:#F29668">=</span><span style="color:#FF8F40"> await</span><span style="color:#BFBDB6"> c</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">req</span><span style="color:#F29668">.</span><span style="color:#FFB454">json</span><span style="color:#BFBDB6">()</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">  // Validate inputs</span></span>
<span class="line"><span style="color:#FF8F40">  if</span><span style="color:#BFBDB6"> (</span><span style="color:#F29668">!</span><span style="color:#BFBDB6">playerId </span><span style="color:#F29668">||</span><span style="color:#F29668"> !</span><span style="color:#BFBDB6">gameMode </span><span style="color:#F29668">||</span><span style="color:#F29668"> !</span><span style="color:#BFBDB6">mapName) {</span></span>
<span class="line"><span style="color:#FF8F40">    return</span><span style="color:#BFBDB6"> c</span><span style="color:#F29668">.</span><span style="color:#FFB454">json</span><span style="color:#BFBDB6">({ error</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "Missing required fields"</span><span style="color:#BFBDB6"> }</span><span style="color:#BFBDB6B3">,</span><span style="color:#D2A6FF"> 400</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  }</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">  // Determine resources based on game mode</span></span>
<span class="line"><span style="color:#FF8F40">  let</span><span style="color:#BFBDB6"> cpu </span><span style="color:#F29668">=</span><span style="color:#D2A6FF"> 1000</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">  let</span><span style="color:#BFBDB6"> memory </span><span style="color:#F29668">=</span><span style="color:#D2A6FF"> 1024</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#FF8F40">  if</span><span style="color:#BFBDB6"> (gameMode </span><span style="color:#F29668">===</span><span style="color:#AAD94C"> "battle-royale"</span><span style="color:#BFBDB6">) {</span></span>
<span class="line"><span style="color:#BFBDB6">    cpu </span><span style="color:#F29668">=</span><span style="color:#D2A6FF"> 2000</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">    memory </span><span style="color:#F29668">=</span><span style="color:#D2A6FF"> 2048</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  }</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">  // Create the custom lobby actor</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> { actor } </span><span style="color:#F29668">=</span><span style="color:#FF8F40"> await</span><span style="color:#BFBDB6"> client</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">actors</span><span style="color:#F29668">.</span><span style="color:#FFB454">create</span><span style="color:#BFBDB6">({</span></span>
<span class="line"><span style="color:#BFBDB6">    body</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">      tags</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> { </span></span>
<span class="line"><span style="color:#BFBDB6">        name</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "custom-lobby"</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">        game_mode</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> gameMode</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">        map</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> mapName</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">        host_player</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> playerId</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">        is_private</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> isPrivate </span><span style="color:#F29668">?</span><span style="color:#AAD94C"> "true"</span><span style="color:#F29668"> :</span><span style="color:#AAD94C"> "false"</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">        created_at</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> Date</span><span style="color:#F29668">.</span><span style="color:#FFB454">now</span><span style="color:#BFBDB6">()</span><span style="color:#F29668">.</span><span style="color:#FFB454">toString</span><span style="color:#BFBDB6">()</span></span>
<span class="line"><span style="color:#BFBDB6">      }</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">      buildTags</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> { name</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "game-server"</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> current</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "true"</span><span style="color:#BFBDB6"> }</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">      network</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">        ports</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">          game</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> { protocol</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "https"</span><span style="color:#BFBDB6"> }</span></span>
<span class="line"><span style="color:#BFBDB6">        }</span></span>
<span class="line"><span style="color:#BFBDB6">      }</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">      resources</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> { cpu</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> memory }</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">      env</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">        GAME_MODE</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> gameMode</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">        MAP_NAME</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> mapName</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">        PLAYER_LIMIT</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> playerLimit</span><span style="color:#F29668">?.</span><span style="color:#FFB454">toString</span><span style="color:#BFBDB6">() </span><span style="color:#F29668">||</span><span style="color:#AAD94C"> "8"</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">        IS_PRIVATE</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> isPrivate </span><span style="color:#F29668">?</span><span style="color:#AAD94C"> "true"</span><span style="color:#F29668"> :</span><span style="color:#AAD94C"> "false"</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> </span></span>
<span class="line"><span style="color:#BFBDB6">        LOBBY_PASSWORD</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> password </span><span style="color:#F29668">||</span><span style="color:#AAD94C"> ""</span></span>
<span class="line"><span style="color:#BFBDB6">      }</span></span>
<span class="line"><span style="color:#BFBDB6">    }</span></span>
<span class="line"><span style="color:#BFBDB6">  })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">  // Return connection information</span></span>
<span class="line"><span style="color:#FF8F40">  return</span><span style="color:#BFBDB6"> c</span><span style="color:#F29668">.</span><span style="color:#FFB454">json</span><span style="color:#BFBDB6">({</span></span>
<span class="line"><span style="color:#BFBDB6">    lobbyId</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">    connectionInfo</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">      gameUrl</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">network</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">ports</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">game</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">url</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">    }</span></span>
<span class="line"><span style="color:#BFBDB6">  })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">})</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">// List lobbies with filtering</span></span>
<span class="line"><span style="color:#BFBDB6">app</span><span style="color:#F29668">.</span><span style="color:#FFB454">get</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">'/lobbies'</span><span style="color:#BFBDB6B3">,</span><span style="color:#FF8F40"> async</span><span style="color:#BFBDB6"> (</span><span style="color:#D2A6FF">c</span><span style="color:#BFBDB6">) </span><span style="color:#FF8F40">=></span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> gameMode </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> c</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">req</span><span style="color:#F29668">.</span><span style="color:#FFB454">query</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">'gameMode'</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> map </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> c</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">req</span><span style="color:#F29668">.</span><span style="color:#FFB454">query</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">'map'</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> isPrivate </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> c</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">req</span><span style="color:#F29668">.</span><span style="color:#FFB454">query</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">'isPrivate'</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">  // Build tag filter</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> tags </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> { name</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "custom-lobby"</span><span style="color:#BFBDB6"> }</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">  if</span><span style="color:#BFBDB6"> (gameMode) tags</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">game_mode </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> gameMode</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">  if</span><span style="color:#BFBDB6"> (map) tags</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">map </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> map</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">  if</span><span style="color:#BFBDB6"> (isPrivate) tags</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">is_private </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> isPrivate</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">  // Query lobbies</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> { actors } </span><span style="color:#F29668">=</span><span style="color:#FF8F40"> await</span><span style="color:#BFBDB6"> client</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">actors</span><span style="color:#F29668">.</span><span style="color:#FFB454">list</span><span style="color:#BFBDB6">({</span></span>
<span class="line"><span style="color:#BFBDB6">    tagsJson</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> JSON</span><span style="color:#F29668">.</span><span style="color:#FFB454">stringify</span><span style="color:#BFBDB6">(tags)</span></span>
<span class="line"><span style="color:#BFBDB6">  })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">  // Transform response</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> lobbies </span><span style="color:#F29668">=</span><span style="color:#BFBDB6"> actors</span><span style="color:#F29668">.</span><span style="color:#FFB454">map</span><span style="color:#BFBDB6">(</span><span style="color:#D2A6FF">actor</span><span style="color:#FF8F40"> =></span><span style="color:#BFBDB6"> ({</span></span>
<span class="line"><span style="color:#BFBDB6">    id</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">    gameMode</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">tags</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">game_mode</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">    map</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">tags</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">map</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">    hostPlayer</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">tags</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">host_player</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">    isPrivate</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">tags</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">is_private </span><span style="color:#F29668">===</span><span style="color:#AAD94C"> "true"</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">    createdAt</span><span style="color:#BFBDB6B3">:</span><span style="color:#FFB454"> parseInt</span><span style="color:#BFBDB6">(actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">tags</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">created_at)</span></span>
<span class="line"><span style="color:#BFBDB6">  }))</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#FF8F40">  return</span><span style="color:#BFBDB6"> c</span><span style="color:#F29668">.</span><span style="color:#FFB454">json</span><span style="color:#BFBDB6">({ lobbies })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">})</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF8F40">export</span><span style="color:#FF8F40"> default</span><span style="color:#BFBDB6"> app</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span></code></pre>30:T1e24,<pre class="shiki ayu-dark" style="background-color:#0c0a09;color:#bfbdb6" tabindex="0"><code><span class="line"><span style="color:#FF8F40">import</span><span style="color:#BFBDB6"> { RivetClient } </span><span style="color:#FF8F40">from</span><span style="color:#AAD94C"> '@rivet-gg/api'</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF8F40">async</span><span style="color:#FF8F40"> function</span><span style="color:#FFB454"> upgradeEmptyServers</span><span style="color:#BFBDB6">() {</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> client </span><span style="color:#F29668">=</span><span style="color:#F29668"> new</span><span style="color:#FFB454"> RivetClient</span><span style="color:#BFBDB6">({ token</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_TOKEN })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">  // List all game servers</span></span>
<span class="line"><span style="color:#FF8F40">  const</span><span style="color:#BFBDB6"> { actors } </span><span style="color:#F29668">=</span><span style="color:#FF8F40"> await</span><span style="color:#BFBDB6"> client</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">actors</span><span style="color:#F29668">.</span><span style="color:#FFB454">list</span><span style="color:#BFBDB6">({</span></span>
<span class="line"><span style="color:#BFBDB6">    tagsJson</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> JSON</span><span style="color:#F29668">.</span><span style="color:#FFB454">stringify</span><span style="color:#BFBDB6">({ name</span><span style="color:#BFBDB6B3">:</span><span style="color:#AAD94C"> "game-server"</span><span style="color:#BFBDB6"> })</span></span>
<span class="line"><span style="color:#BFBDB6">  })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">  </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">  // Check each server for player count</span></span>
<span class="line"><span style="color:#FF8F40">  for</span><span style="color:#BFBDB6"> (</span><span style="color:#FF8F40">const</span><span style="color:#BFBDB6"> actor </span><span style="color:#F29668">of</span><span style="color:#BFBDB6"> actors) {</span></span>
<span class="line"><span style="color:#FF8F40">    try</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#FF8F40">      const</span><span style="color:#BFBDB6"> statsUrl </span><span style="color:#F29668">=</span><span style="color:#AAD94C"> `</span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">network</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">ports</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">http</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">url</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C">/stats`</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">      const</span><span style="color:#BFBDB6"> response </span><span style="color:#F29668">=</span><span style="color:#FF8F40"> await</span><span style="color:#FFB454"> fetch</span><span style="color:#BFBDB6">(statsUrl)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#FF8F40">      const</span><span style="color:#BFBDB6"> stats </span><span style="color:#F29668">=</span><span style="color:#FF8F40"> await</span><span style="color:#BFBDB6"> response</span><span style="color:#F29668">.</span><span style="color:#FFB454">json</span><span style="color:#BFBDB6">()</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">      </span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">      // Upgrade servers with no players</span></span>
<span class="line"><span style="color:#FF8F40">      if</span><span style="color:#BFBDB6"> (stats</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">playerCount </span><span style="color:#F29668">===</span><span style="color:#D2A6FF"> 0</span><span style="color:#BFBDB6">) {</span></span>
<span class="line"><span style="color:#ACB6BF8C;font-style:italic">        // See [actors.upgrade](/docs/cloud/api/actors/upgrade) for more options</span></span>
<span class="line"><span style="color:#FF8F40">        await</span><span style="color:#BFBDB6"> client</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">actors</span><span style="color:#F29668">.</span><span style="color:#FFB454">upgrade</span><span style="color:#BFBDB6">(actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> {</span></span>
<span class="line"><span style="color:#BFBDB6">          project</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_PROJECT_ID</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">          environment</span><span style="color:#BFBDB6B3">:</span><span style="color:#BFBDB6"> process</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">env</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">RIVET_ENVIRONMENT_ID</span><span style="color:#BFBDB6B3">,</span></span>
<span class="line"><span style="color:#BFBDB6">        })</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">        console</span><span style="color:#F29668">.</span><span style="color:#FFB454">log</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">`Upgraded empty server: </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C">`</span><span style="color:#BFBDB6">)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">      }</span></span>
<span class="line"><span style="color:#BFBDB6">    } </span><span style="color:#FF8F40">catch</span><span style="color:#BFBDB6"> (err) {</span></span>
<span class="line"><span style="color:#BFBDB6">      console</span><span style="color:#F29668">.</span><span style="color:#FFB454">error</span><span style="color:#BFBDB6">(</span><span style="color:#AAD94C">`Failed to check server </span><span style="color:#FF8F40">${</span><span style="color:#BFBDB6">actor</span><span style="color:#F29668">.</span><span style="color:#BFBDB6">id</span><span style="color:#FF8F40">}</span><span style="color:#AAD94C">`</span><span style="color:#BFBDB6B3">,</span><span style="color:#BFBDB6"> err)</span><span style="color:#BFBDB6B3">;</span></span>
<span class="line"><span style="color:#BFBDB6">    }</span></span>
<span class="line"><span style="color:#BFBDB6">  }</span></span>
<span class="line"><span style="color:#BFBDB6">}</span></span>
<span class="line"></span></code></pre>f:[["$","aside",null,{"className":"hidden lg:block border-r","children":null}],["$","div",null,{"className":"flex justify-center w-full","children":["$","div",null,{"className":"flex gap-8 max-w-6xl w-full","children":[["$","main",null,{"className":"w-full py-8 px-8 lg:mx-0 mx-auto max-w-prose lg:max-w-none","children":[["$","div",null,{"className":"relative","children":["$","div",null,{"className":"absolute top-5 right-0","children":["$","$L1c",null,{"title":"Multiplayer Game Servers","markdownPath":"docs/cloud/solutions/game-servers","currentUrl":"/docs/cloud/solutions/game-servers"}]}]}],["$","article",null,{"className":"max-w-prose lg:max-w-prose mx-auto prose-invert prose","children":["$undefined",[["$","h1",null,{"children":"Multiplayer Game Servers"}],"\n",["$","p",null,{"children":"Rivet provides a robust platform for deploying, scaling, and managing game servers globally."}],"\n",["$","$L1d",null,{"level":2,"id":"quickstart","children":"Quickstart"}],"\n",["$","p",null,{"children":"In this guide, we'll implement a simple game server on Rivet and create a backend API that manages server instances. This tutorial assumes you already have your own API server that will handle game logic and player management."}],"\n",["$","p",null,{"children":"Before starting, you'll need to choose a runtime for your game server. Rivet offers two options:"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":["$","$La",null,{"href":"/docs/actors","children":"Actors"}]}],": For lightweight, fast-starting game servers using JavaScript/TypeScript"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":["$","$La",null,{"href":"/docs/cloud/containers","children":"Containers"}]}],": For maximum flexibility, supports any language, ideal for complex game servers"]}],"\n"]}],"\n",["$","$L1d",null,{"level":3,"id":"step-1-preparing-your-game-server-code","children":"Step 1: Preparing your game server code"}],"\n",["$","p",null,{"children":"We'll package your existing game server to run on Rivet. Depending on your chosen runtime, you'll need to create different files:"}],"\n",["$","$L1e",null,{"defaultValue":"Container Runtime","children":[["$","$L1f",null,{"children":["$","$L20",null,{"children":[["$","$L21","Container Runtime",{"value":"Container Runtime","children":"Container Runtime"}],["$","$L21","JavaScript Runtime",{"value":"JavaScript Runtime","children":"JavaScript Runtime"}]]}]}],[["$","$L22",null,{"value":"Container Runtime","children":[["$","div",null,{"className":"relative w-full rounded-xl border p-4 my-4 flex gap-3 bg-blue-950/20 border-blue-700/50","children":[["$","div",null,{"className":"flex-shrink-0 pt-0.5","children":["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"circle-info","className":"svg-inline--fa fa-circle-info w-5 h-5 text-blue-400","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 512 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM216 336l24 0 0-64-24 0c-13.3 0-24-10.7-24-24s10.7-24 24-24l48 0c13.3 0 24 10.7 24 24l0 88 8 0c13.3 0 24 10.7 24 24s-10.7 24-24 24l-80 0c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-208a32 32 0 1 1 0 64 32 32 0 1 1 0-64z","style":{}}]}]}],["$","div",null,{"className":"flex-1 prose-invert prose max-w-full w-full text-blue-100","children":["$","p",null,{"children":[["$","strong",null,{"children":"Durability is disabled by default"}],": Your existing game server code (",["$","code",null,{"dangerouslySetInnerHTML":{"__html":"server.js"}}],") should read environment variables for port configuration. Read more ",["$","$La",null,{"href":"/docs/networking#environment-variable-naming","children":"here"}],"."]}]}]]}],["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[["$","div",null,{"className":"text-foreground flex items-center justify-between gap-2 border-b p-2 text-xs","children":[["$","div",null,{"className":"text-muted-foreground flex items-center gap-1","children":["$","div",null,{"ref":"$undefined","className":"inline-flex items-center tracking-normal rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 whitespace-nowrap max-w-full overflow-hidden truncate text-foreground","children":"Dockerfile"}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"$25"}}]}]}]]}]]}],["$","$L22",null,{"value":"JavaScript Runtime","children":["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[["$","div",null,{"className":"text-foreground flex items-center justify-between gap-2 border-b p-2 text-xs","children":[["$","div",null,{"className":"text-muted-foreground flex items-center gap-1","children":["$","div",null,{"ref":"$undefined","className":"inline-flex items-center tracking-normal rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 whitespace-nowrap max-w-full overflow-hidden truncate text-foreground","children":"src/index.ts"}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"$26"}}]}]}]]}]}]]]}],"\n",["$","$L1d",null,{"level":3,"id":"step-2-creating-a-rivet-configuration","children":"Step 2: Creating a Rivet configuration"}],"\n",["$","p",null,{"children":["Create a minimal ",["$","code",null,{"dangerouslySetInnerHTML":{"__html":"rivet.json"}}]," configuration file that tells Rivet how to deploy your game server:"]}],"\n",["$","div",null,{"className":"code-group group my-4 rounded-md border pt-2","data-code-group":true,"children":["$","$L1e",null,{"defaultValue":"Actors","children":[["$","div",null,{"className":"flex gap-1 border-b pr-2","children":[["$","$L1f",null,{"className":"w-full","viewportProps":{"className":"[&>div]:!table"},"children":["$","$L20",null,{"className":"border-b-0","children":[["$","$L21","Actors/.0",{"value":"Actors","children":"Actors"}],["$","$L21","Containers/.1",{"value":"Containers","children":"Containers"}]]}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5 text-foreground","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],[["$","$L22","Actors/.0",{"value":"Actors","children":["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[null,["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"<pre class=\"shiki ayu-dark\" style=\"background-color:#0c0a09;color:#bfbdb6\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#BFBDB6\">{</span></span>\n<span class=\"line\"><span style=\"color:#39BAE6\">  \"actors\"</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#BFBDB6\"> {</span></span>\n<span class=\"line\"><span style=\"color:#39BAE6\">    \"game-server\"</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#BFBDB6\"> {</span></span>\n<span class=\"line\"><span style=\"color:#39BAE6\">      \"script\"</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#AAD94C\"> \"./src/index.ts\"</span></span>\n<span class=\"line\"><span style=\"color:#BFBDB6\">    }</span></span>\n<span class=\"line\"><span style=\"color:#BFBDB6\">  }</span></span>\n<span class=\"line\"><span style=\"color:#BFBDB6\">}</span></span>\n<span class=\"line\"></span></code></pre>"}}]}]}]]}]}],["$","$L22","Containers/.1",{"value":"Containers","children":["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[null,["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"<pre class=\"shiki ayu-dark\" style=\"background-color:#0c0a09;color:#bfbdb6\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#BFBDB6\">{</span></span>\n<span class=\"line\"><span style=\"color:#39BAE6\">  \"containers\"</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#BFBDB6\"> {</span></span>\n<span class=\"line\"><span style=\"color:#39BAE6\">    \"game-server\"</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#BFBDB6\"> {</span></span>\n<span class=\"line\"><span style=\"color:#39BAE6\">      \"dockerfile\"</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#AAD94C\"> \"Dockerfile\"</span></span>\n<span class=\"line\"><span style=\"color:#BFBDB6\">    }</span></span>\n<span class=\"line\"><span style=\"color:#BFBDB6\">  }</span></span>\n<span class=\"line\"><span style=\"color:#BFBDB6\">}</span></span>\n<span class=\"line\"></span></code></pre>"}}]}]}]]}]}]]]}]}],"\n",["$","$L1d",null,{"level":3,"id":"step-3-deploying-your-game-server","children":"Step 3: Deploying your game server"}],"\n",["$","p",null,{"children":["Install the Rivet CLI ",["$","$La",null,{"href":"/docs/cloud/install","children":"here"}],". Then deploy your game server to Rivet using the CLI:"]}],"\n",["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[["$","div",null,{"className":"text-foreground flex items-center justify-between gap-2 border-b p-2 text-xs","children":[["$","div",null,{"className":"text-muted-foreground flex items-center gap-1","children":["$","div",null,{"ref":"$undefined","className":"inline-flex items-center tracking-normal rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 whitespace-nowrap max-w-full overflow-hidden truncate text-foreground","children":"Command Line"}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"<pre class=\"shiki ayu-dark\" style=\"background-color:#0c0a09;color:#bfbdb6\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#59C2FF\">rivet</span><span style=\"color:#AAD94C\"> deploy</span></span>\n<span class=\"line\"></span></code></pre>"}}]}]}]]}],"\n",["$","div",null,{"className":"relative w-full rounded-xl border p-4 my-4 flex gap-3 bg-gray-950/20 border-gray-700/50","children":[["$","div",null,{"className":"flex-shrink-0 pt-0.5","children":["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"circle-info","className":"svg-inline--fa fa-circle-info w-5 h-5 text-gray-400","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 512 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM216 336l24 0 0-64-24 0c-13.3 0-24-10.7-24-24s10.7-24 24-24l48 0c13.3 0 24 10.7 24 24l0 88 8 0c13.3 0 24 10.7 24 24s-10.7 24-24 24l-80 0c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-208a32 32 0 1 1 0 64 32 32 0 1 1 0-64z","style":{}}]}]}],["$","div",null,{"className":"flex-1 prose-invert prose max-w-full w-full text-gray-100","children":["$","p",null,{"children":[["$","strong",null,{"children":"This will not create a server."}]," This uploads your game server code to Rivet but doesn't start any instances yet. Your code is now available to be launched on-demand."]}]}]]}],"\n",["$","$L1d",null,{"level":3,"id":"step-4-optional-starting-game-server-instances-with-a-backend-api","children":"Step 4 (optional): Starting game server instances with a backend API"}],"\n",["$","p",null,{"children":"In your backend API, add code to start game server instances when needed."}],"\n",["$","p",null,{"children":["It's up to you when you choose to call ",["$","code",null,{"dangerouslySetInnerHTML":{"__html":"createGameServer"}}],". Read more about different scaling patterns under ",["$","$La",null,{"href":"#scaling-methods","children":"Scaling Methods"}],"."]}],"\n",["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[["$","div",null,{"className":"text-foreground flex items-center justify-between gap-2 border-b p-2 text-xs","children":[["$","div",null,{"className":"text-muted-foreground flex items-center gap-1","children":["$","div",null,{"ref":"$undefined","className":"inline-flex items-center tracking-normal rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 whitespace-nowrap max-w-full overflow-hidden truncate text-foreground","children":"api-server.js"}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"$27"}}]}]}]]}],"\n",["$","div",null,{"className":"relative w-full rounded-xl border p-4 my-4 flex gap-3 bg-gray-950/20 border-gray-700/50","children":[["$","div",null,{"className":"flex-shrink-0 pt-0.5","children":["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"circle-info","className":"svg-inline--fa fa-circle-info w-5 h-5 text-gray-400","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 512 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM216 336l24 0 0-64-24 0c-13.3 0-24-10.7-24-24s10.7-24 24-24l48 0c13.3 0 24 10.7 24 24l0 88 8 0c13.3 0 24 10.7 24 24s-10.7 24-24 24l-80 0c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-208a32 32 0 1 1 0 64 32 32 0 1 1 0-64z","style":{}}]}]}],["$","div",null,{"className":"flex-1 prose-invert prose max-w-full w-full text-gray-100","children":["$","p",null,{"children":[["$","strong",null,{"children":"Only call Rivet API from your backend."}]," The Rivet API requires a private ",["$","em",null,{"children":"Service Token"}]," and should only be called from your backend. Do not make this service token public."]}]}]]}],"\n",["$","$L1d",null,{"level":3,"id":"step-5-optional-connecting-players-to-your-game-server","children":"Step 5 (optional): Connecting players to your game server"}],"\n",["$","p",null,{"children":"When players need to join a game, your backend API provides the WebSocket connection URL:"}],"\n",["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[["$","div",null,{"className":"text-foreground flex items-center justify-between gap-2 border-b p-2 text-xs","children":[["$","div",null,{"className":"text-muted-foreground flex items-center gap-1","children":["$","div",null,{"ref":"$undefined","className":"inline-flex items-center tracking-normal rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 whitespace-nowrap max-w-full overflow-hidden truncate text-foreground","children":"api-server.js"}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"$28"}}]}]}]]}],"\n",["$","div",null,{"className":"relative w-full rounded-xl border p-4 my-4 flex gap-3 bg-gray-950/20 border-gray-700/50","children":[["$","div",null,{"className":"flex-shrink-0 pt-0.5","children":["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"circle-info","className":"svg-inline--fa fa-circle-info w-5 h-5 text-gray-400","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 512 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM216 336l24 0 0-64-24 0c-13.3 0-24-10.7-24-24s10.7-24 24-24l48 0c13.3 0 24 10.7 24 24l0 88 8 0c13.3 0 24 10.7 24 24s-10.7 24-24 24l-80 0c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-208a32 32 0 1 1 0 64 32 32 0 1 1 0-64z","style":{}}]}]}],["$","div",null,{"className":"flex-1 prose-invert prose max-w-full w-full text-gray-100","children":["$","p",null,{"children":["We recommend storing the connection URL returned from ",["$","code",null,{"dangerouslySetInnerHTML":{"__html":"actors.create"}}]," instead of calling ",["$","code",null,{"dangerouslySetInnerHTML":{"__html":"actors.list"}}]," for every API call."]}]}]]}],"\n",["$","$L1d",null,{"level":3,"id":"step-6-optional-destroying-servers-once-finished","children":"Step 6 (optional): Destroying servers once finished"}],"\n",["$","p",null,{"children":"When a game finishes, clean up the server to avoid unnecessary costs:"}],"\n",["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[["$","div",null,{"className":"text-foreground flex items-center justify-between gap-2 border-b p-2 text-xs","children":[["$","div",null,{"className":"text-muted-foreground flex items-center gap-1","children":["$","div",null,{"ref":"$undefined","className":"inline-flex items-center tracking-normal rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 whitespace-nowrap max-w-full overflow-hidden truncate text-foreground","children":"api-server.js"}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"$29"}}]}]}]]}],"\n",["$","$L1d",null,{"level":2,"id":"global-regions","children":"Global Regions"}],"\n",["$","p",null,{"children":"Rivet's global edge network allows you to deploy game servers in multiple regions around the world, ensuring low latency for players regardless of their location."}],"\n",["$","$L1d",null,{"level":3,"id":"available-regions","children":"Available Regions"}],"\n",["$","p",null,{"children":["Rivet offers server deployments across multiple geographic regions. See the list of available regions ",["$","$La",null,{"href":"/docs/edge","children":"here"}],"."]}],"\n",["$","p",null,{"children":"To fetch the available regions dynamically, use:"}],"\n",["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[["$","div",null,{"className":"text-foreground flex items-center justify-between gap-2 border-b p-2 text-xs","children":[["$","div",null,{"className":"text-muted-foreground flex items-center gap-1","children":["$","div",null,{"ref":"$undefined","className":"inline-flex items-center tracking-normal rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 whitespace-nowrap max-w-full overflow-hidden truncate text-foreground","children":"TypeScript"}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"$2a"}}]}]}]]}],"\n",["$","$L1d",null,{"level":3,"id":"region-selection","children":"Region Selection"}],"\n",["$","p",null,{"children":"You can also use the recommendation API from the client to get the recommended region based on the player's IP:"}],"\n",["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[["$","div",null,{"className":"text-foreground flex items-center justify-between gap-2 border-b p-2 text-xs","children":[["$","div",null,{"className":"text-muted-foreground flex items-center gap-1","children":["$","div",null,{"ref":"$undefined","className":"inline-flex items-center tracking-normal rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 whitespace-nowrap max-w-full overflow-hidden truncate text-foreground","children":"TypeScript"}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"$2b"}}]}]}]]}],"\n",["$","$L1d",null,{"level":2,"id":"scaling-methods","children":"Scaling Methods"}],"\n",["$","p",null,{"children":"Choose the scaling approach that best fits your game's architecture and player patterns:"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"Static Server Fleet"}],": Best for games with predictable player counts and consistent traffic"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Dynamic Load-Based"}],": Ideal for games with variable player counts throughout the day"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"On-Demand Lobby Creation"}],": Perfect for session-based games where matches have distinct lifetimes"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Custom Game Lobbies"}],": Suited for games where players create rooms with specific settings"]}],"\n"]}],"\n",["$","$L1d",null,{"level":3,"id":"static-server-fleet","children":"Static Server Fleet"}],"\n",["$","p",null,{"children":["This approach maintains a predetermined number of game servers running in each region. It uses ",["$","code",null,{"dangerouslySetInnerHTML":{"__html":"actors.list"}}]," to check for existing servers and automatically creates or destroys servers to maintain the desired count."]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Ensures a consistent number of servers are available in each region"}],"\n",["$","li",null,{"children":["Servers are ",["$","$La",null,{"href":"/docs/durability","children":"durable"}],", meaning they automatically restart if they crash"]}],"\n",["$","li",null,{"children":"Monitor these servers in the Rivet dashboard"}],"\n"]}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"Example"}]}],"\n",["$","p",null,{"children":"Use this script to maintain a fixed number of servers across specified regions:"}],"\n",["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[["$","div",null,{"className":"text-foreground flex items-center justify-between gap-2 border-b p-2 text-xs","children":[["$","div",null,{"className":"text-muted-foreground flex items-center gap-1","children":["$","div",null,{"ref":"$undefined","className":"inline-flex items-center tracking-normal rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 whitespace-nowrap max-w-full overflow-hidden truncate text-foreground","children":"manage-servers.js"}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"$2c"}}]}]}]]}],"\n",["$","p",null,{"children":"To run this with the credentials auto-populated, use:"}],"\n",["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[["$","div",null,{"className":"text-foreground flex items-center justify-between gap-2 border-b p-2 text-xs","children":[["$","div",null,{"className":"text-muted-foreground flex items-center gap-1","children":["$","div",null,{"ref":"$undefined","className":"inline-flex items-center tracking-normal rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 whitespace-nowrap max-w-full overflow-hidden truncate text-foreground","children":"Command Line"}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"<pre class=\"shiki ayu-dark\" style=\"background-color:#0c0a09;color:#bfbdb6\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#59C2FF\">rivet</span><span style=\"color:#AAD94C\"> shell</span><span style=\"color:#95E6CB\"> --exec</span><span style=\"color:#AAD94C\"> 'node manage-servers.js'</span></span>\n<span class=\"line\"></span></code></pre>"}}]}]}]]}],"\n",["$","p",null,{"children":"This script will output a list of server connection URLs that you can copy & paste in your game's frontend to show a server list."}],"\n",["$","$L1d",null,{"level":3,"id":"dynamic-load-based-scaling","children":"Dynamic Load-Based Scaling"}],"\n",["$","p",null,{"children":"Scale your server fleet up or down based on demand from your backend."}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Periodically check metrics (player count, server load) from your running servers"}],"\n",["$","li",null,{"children":["Call ",["$","$La",null,{"href":"/docs/cloud/api/actors/create","children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"actors.create"}}]}]," to add servers when needed"]}],"\n",["$","li",null,{"children":["Call ",["$","$La",null,{"href":"/docs/cloud/api/actors/destroy","children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"actors.destroy"}}]}]," to remove underutilized servers"]}],"\n",["$","li",null,{"children":"Implement custom scaling logic based on your game's patterns"}],"\n"]}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"Example: Periodic scaling with setInterval"}]}],"\n",["$","p",null,{"children":"In your own backend:"}],"\n",["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[["$","div",null,{"className":"text-foreground flex items-center justify-between gap-2 border-b p-2 text-xs","children":[["$","div",null,{"className":"text-muted-foreground flex items-center gap-1","children":["$","div",null,{"ref":"$undefined","className":"inline-flex items-center tracking-normal rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 whitespace-nowrap max-w-full overflow-hidden truncate text-foreground","children":"api-server.js"}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"$2d"}}]}]}]]}],"\n",["$","$L1d",null,{"level":3,"id":"on-demand-lobby-creation","children":"On-Demand Lobby Creation"}],"\n",["$","p",null,{"children":"Create game servers on-demand as players request to join lobbies."}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Your lobby management service maintains a state of available lobbies"}],"\n",["$","li",null,{"children":"When a player requests to join, check for available space in existing lobbies"}],"\n",["$","li",null,{"children":"If no space is available, create a new server instance"}],"\n",["$","li",null,{"children":"Clean up servers once they're empty"}],"\n"]}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"Key Endpoints:"}]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Request to join lobby (called by client)"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Check if there is space in existing lobbies"}],"\n",["$","li",null,{"children":"If not, create a new actor (handle race conditions appropriately)"}],"\n",["$","li",null,{"children":"Return connection information to the client"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Player disconnected (called by lobby)"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Remove player from lobby tracking"}],"\n",["$","li",null,{"children":"Destroy lobby if empty after a grace period"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Heartbeat/watchdog"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Implement timeout mechanisms for players who connect but never join"}],"\n",["$","li",null,{"children":"Clean up abandoned servers to prevent resource waste"}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"Example: On-demand lobby system with Hono"}]}],"\n",["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[["$","div",null,{"className":"text-foreground flex items-center justify-between gap-2 border-b p-2 text-xs","children":[["$","div",null,{"className":"text-muted-foreground flex items-center gap-1","children":["$","div",null,{"ref":"$undefined","className":"inline-flex items-center tracking-normal rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 whitespace-nowrap max-w-full overflow-hidden truncate text-foreground","children":"TypeScript"}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"$2e"}}]}]}]]}],"\n",["$","$L1d",null,{"level":3,"id":"custom-game-lobbies","children":"Custom Game Lobbies"}],"\n",["$","p",null,{"children":"Create customized game servers on-demand with specific configurations."}],"\n",["$","div",null,{"className":"relative w-full rounded-xl border p-4 my-4 flex gap-3 bg-yellow-950/20 border-yellow-700/50","children":[["$","div",null,{"className":"flex-shrink-0 pt-0.5","children":["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"triangle-exclamation","className":"svg-inline--fa fa-triangle-exclamation w-5 h-5 text-yellow-400","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 512 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480L40 480c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24l0 112c0 13.3 10.7 24 24 24s24-10.7 24-24l0-112c0-13.3-10.7-24-24-24zm32 224a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z","style":{}}]}]}],["$","div",null,{"className":"flex-1 prose-invert prose max-w-full w-full text-yellow-100","children":["$","p",null,{"children":"Always implement lobby creation in your trusted backend, never in client code."}]}]]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Create actors with specific configurations via environment variables"}],"\n",["$","li",null,{"children":"Customize CPU and memory resources for demanding game modes"}],"\n",["$","li",null,{"children":["Use tags for organizing and querying actors with ",["$","$La",null,{"href":"/docs/cloud/api/actors/list","children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"actors.list"}}]}]]}],"\n",["$","li",null,{"children":"Filter and monitor lobbies in the dashboard"}],"\n"]}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"Example: Custom lobby creation with Hono"}]}],"\n",["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[["$","div",null,{"className":"text-foreground flex items-center justify-between gap-2 border-b p-2 text-xs","children":[["$","div",null,{"className":"text-muted-foreground flex items-center gap-1","children":["$","div",null,{"ref":"$undefined","className":"inline-flex items-center tracking-normal rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 whitespace-nowrap max-w-full overflow-hidden truncate text-foreground","children":"TypeScript"}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"$2f"}}]}]}]]}],"\n",["$","$L1d",null,{"level":2,"id":"upgrading-servers","children":"Upgrading Servers"}],"\n",["$","p",null,{"children":"Choose the upgrade approach that best fits your game's requirements:"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"Default Behavior"}],": Best for development or games that can tolerate brief interruptions"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Targeted Upgrading"}],": Ideal for testing new versions on a subset of servers before full rollout"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Zero-Downtime Rolling"}],": Essential for production games where player sessions must be preserved"]}],"\n"]}],"\n",["$","$L1d",null,{"level":3,"id":"default-behavior","children":"Default Behavior"}],"\n",["$","p",null,{"children":["When you run ",["$","code",null,{"dangerouslySetInnerHTML":{"__html":"rivet deploy"}}],", your game server code is uploaded and all running ",["$","$La",null,{"href":"/docs/durability","children":"durable"}]," actors are automatically upgraded:"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"When deploying a new version, actors receive a SIGTERM signal"}],"\n",["$","li",null,{"children":"They have a 30-second grace period to clean up and shutdown"}],"\n",["$","li",null,{"children":"New actors start automatically using the updated code"}],"\n",["$","li",null,{"children":"This is the simplest approach but will disconnect active players"}],"\n"]}],"\n",["$","$L1d",null,{"level":3,"id":"targeted-server-upgrading","children":"Targeted Server Upgrading"}],"\n",["$","p",null,{"children":"If you want more control over upgrading your servers, you can use targeted upgrades to selectively update specific servers:"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["Call ",["$","$La",null,{"href":"/docs/cloud/api/actors/upgrade","children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"actors.upgrade"}}]}]," on specific actors"]}],"\n",["$","li",null,{"children":"Useful for testing updates on a subset of servers"}],"\n",["$","li",null,{"children":"Allows controlled rollout of new versions"}],"\n",["$","li",null,{"children":"Can target empty or low-population servers first"}],"\n",["$","li",null,{"children":"Example: Upgrade only empty servers first"}],"\n",["$","li",null,{"children":"Validate new version behavior before full rollout"}],"\n"]}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"Example: Manual selective upgrading"}]}],"\n",["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[["$","div",null,{"className":"text-foreground flex items-center justify-between gap-2 border-b p-2 text-xs","children":[["$","div",null,{"className":"text-muted-foreground flex items-center gap-1","children":["$","div",null,{"ref":"$undefined","className":"inline-flex items-center tracking-normal rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 whitespace-nowrap max-w-full overflow-hidden truncate text-foreground","children":"TypeScript"}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"$30"}}]}]}]]}],"\n",["$","$L1d",null,{"level":3,"id":"zero-downtime-rolling-upgrades-with-draining","children":"Zero-Downtime Rolling Upgrades With Draining"}],"\n",["$","p",null,{"children":"For production games, it's highly recommended to implement a system for routing new players to updated servers while allowing existing sessions to complete naturally:"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Implement custom logic to gradually upgrade servers"}],"\n",["$","li",null,{"children":"Start sending new players to new server versions"}],"\n",["$","li",null,{"children":"Wait for old servers to naturally empty out as players finish their sessions"}],"\n",["$","li",null,{"children":"This approach preserves gameplay sessions on existing servers"}],"\n",["$","li",null,{"children":"Requires more complex implementation but provides the best player experience"}],"\n"]}],"\n",["$","$L1d",null,{"level":2,"id":"server-configuration-options","children":"Server Configuration Options"}],"\n",["$","p",null,{"children":["When creating game servers with ",["$","$La",null,{"href":"/docs/cloud/api/actors/create","children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"actors.create"}}]}],", you can configure:"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","strong",null,{"children":"Network"}],": Define HTTPS/WSS ports, custom paths, and routing options"]}],"\n",["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[["$","div",null,{"className":"text-foreground flex items-center justify-between gap-2 border-b p-2 text-xs","children":[["$","div",null,{"className":"text-muted-foreground flex items-center gap-1","children":["$","div",null,{"ref":"$undefined","className":"inline-flex items-center tracking-normal rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 whitespace-nowrap max-w-full overflow-hidden truncate text-foreground","children":"TypeScript"}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"<pre class=\"shiki ayu-dark\" style=\"background-color:#0c0a09;color:#bfbdb6\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#59C2FF\">network</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#BFBDB6\"> { </span><span style=\"color:#59C2FF\">ports</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#BFBDB6\"> { </span><span style=\"color:#59C2FF\">game</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#BFBDB6\"> { </span><span style=\"color:#59C2FF\">protocol</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#AAD94C\"> \"https\"</span><span style=\"color:#BFBDB6\"> } } }</span></span>\n<span class=\"line\"></span></code></pre>"}}]}]}]]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","strong",null,{"children":"Resources"}],": Customize CPU and memory allocation"]}],"\n",["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[["$","div",null,{"className":"text-foreground flex items-center justify-between gap-2 border-b p-2 text-xs","children":[["$","div",null,{"className":"text-muted-foreground flex items-center gap-1","children":["$","div",null,{"ref":"$undefined","className":"inline-flex items-center tracking-normal rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 whitespace-nowrap max-w-full overflow-hidden truncate text-foreground","children":"TypeScript"}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"<pre class=\"shiki ayu-dark\" style=\"background-color:#0c0a09;color:#bfbdb6\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#59C2FF\">resources</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#BFBDB6\"> { </span><span style=\"color:#59C2FF\">cpu</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#D2A6FF\"> 1000</span><span style=\"color:#BFBDB6B3\">,</span><span style=\"color:#59C2FF\"> memory</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#D2A6FF\"> 1024</span><span style=\"color:#BFBDB6\"> }</span></span>\n<span class=\"line\"></span></code></pre>"}}]}]}]]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","strong",null,{"children":"Environment Variables"}],": Configure server behavior via ",["$","code",null,{"dangerouslySetInnerHTML":{"__html":"process.env"}}]]}],"\n",["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[["$","div",null,{"className":"text-foreground flex items-center justify-between gap-2 border-b p-2 text-xs","children":[["$","div",null,{"className":"text-muted-foreground flex items-center gap-1","children":["$","div",null,{"ref":"$undefined","className":"inline-flex items-center tracking-normal rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 whitespace-nowrap max-w-full overflow-hidden truncate text-foreground","children":"TypeScript"}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"<pre class=\"shiki ayu-dark\" style=\"background-color:#0c0a09;color:#bfbdb6\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#59C2FF\">env</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#BFBDB6\"> { </span><span style=\"color:#59C2FF\">MAX_PLAYERS</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#AAD94C\"> \"16\"</span><span style=\"color:#BFBDB6B3\">,</span><span style=\"color:#59C2FF\"> MAP_ROTATION</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#AAD94C\"> \"dust,nuke,inferno\"</span><span style=\"color:#BFBDB6\"> }</span></span>\n<span class=\"line\"></span></code></pre>"}}]}]}]]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","strong",null,{"children":"Tags"}],": Add metadata for filtering and organization"]}],"\n",["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[["$","div",null,{"className":"text-foreground flex items-center justify-between gap-2 border-b p-2 text-xs","children":[["$","div",null,{"className":"text-muted-foreground flex items-center gap-1","children":["$","div",null,{"ref":"$undefined","className":"inline-flex items-center tracking-normal rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 whitespace-nowrap max-w-full overflow-hidden truncate text-foreground","children":"TypeScript"}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"<pre class=\"shiki ayu-dark\" style=\"background-color:#0c0a09;color:#bfbdb6\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#59C2FF\">tags</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#BFBDB6\"> { </span><span style=\"color:#59C2FF\">mode</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#AAD94C\"> \"ranked\"</span><span style=\"color:#BFBDB6B3\">,</span><span style=\"color:#59C2FF\"> region</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#AAD94C\"> \"us-east\"</span><span style=\"color:#BFBDB6\"> }</span></span>\n<span class=\"line\"></span></code></pre>"}}]}]}]]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","strong",null,{"children":"Lifecycle"}],": Set up ",["$","$La",null,{"href":"/docs/durability","children":"durability"}]," and idle timeouts"]}],"\n",["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[["$","div",null,{"className":"text-foreground flex items-center justify-between gap-2 border-b p-2 text-xs","children":[["$","div",null,{"className":"text-muted-foreground flex items-center gap-1","children":["$","div",null,{"ref":"$undefined","className":"inline-flex items-center tracking-normal rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 whitespace-nowrap max-w-full overflow-hidden truncate text-foreground","children":"TypeScript"}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"<pre class=\"shiki ayu-dark\" style=\"background-color:#0c0a09;color:#bfbdb6\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#59C2FF\">lifecycle</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#BFBDB6\"> { </span><span style=\"color:#59C2FF\">durable</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#D2A6FF\"> true</span><span style=\"color:#BFBDB6B3\">,</span><span style=\"color:#59C2FF\"> idle_timeout</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#D2A6FF\"> 300</span><span style=\"color:#BFBDB6\"> }</span></span>\n<span class=\"line\"></span></code></pre>"}}]}]}]]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","strong",null,{"children":"Build Selection"}],": Target specific versions of your server code"]}],"\n",["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[["$","div",null,{"className":"text-foreground flex items-center justify-between gap-2 border-b p-2 text-xs","children":[["$","div",null,{"className":"text-muted-foreground flex items-center gap-1","children":["$","div",null,{"ref":"$undefined","className":"inline-flex items-center tracking-normal rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 whitespace-nowrap max-w-full overflow-hidden truncate text-foreground","children":"TypeScript"}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"<pre class=\"shiki ayu-dark\" style=\"background-color:#0c0a09;color:#bfbdb6\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#59C2FF\">buildTags</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#BFBDB6\"> { </span><span style=\"color:#59C2FF\">name</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#AAD94C\"> \"game-server\"</span><span style=\"color:#BFBDB6B3\">,</span><span style=\"color:#59C2FF\"> current</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#AAD94C\"> \"true\"</span><span style=\"color:#BFBDB6\"> }</span></span>\n<span class=\"line\"></span></code></pre>"}}]}]}]]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","strong",null,{"children":"Region Selection"}],": Deploy to ",["$","$La",null,{"href":"/docs/edge","children":"specific regions"}]," for lower latency"]}],"\n",["$","div",null,{"className":"not-prose my-4 rounded-md border group-[.code-group]:my-0 group-[.code-group]:-mt-2 group-[.code-group]:border-none","data-code-group":true,"children":[["$","div",null,{"className":"text-foreground flex items-center justify-between gap-2 border-b p-2 text-xs","children":[["$","div",null,{"className":"text-muted-foreground flex items-center gap-1","children":["$","div",null,{"ref":"$undefined","className":"inline-flex items-center tracking-normal rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 whitespace-nowrap max-w-full overflow-hidden truncate text-foreground","children":"TypeScript"}]}],["$","$L23",null,{"trigger":["$","$L24",null,{"children":["$","button",null,{"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-7 w-7 text-xs [&_svg]:size-3 gap-1.5","ref":"$undefined","disabled":"$undefined","children":[null,["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"copy","className":"svg-inline--fa fa-copy ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z","style":{}}]}],null]}]}],"content":"Copy code"}]]}],["$","div",null,{"className":"bg-background text-wrap p-2 text-sm","children":["$","$L1f",null,{"className":"w-full","children":["$","span",null,{"className":"not-prose code","dangerouslySetInnerHTML":{"__html":"<pre class=\"shiki ayu-dark\" style=\"background-color:#0c0a09;color:#bfbdb6\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#59C2FF\">region</span><span style=\"color:#BFBDB6B3\">:</span><span style=\"color:#AAD94C\"> \"atl\"</span><span style=\"color:#ACB6BF8C;font-style:italic\"> // Atlanta</span></span>\n<span class=\"line\"></span></code></pre>"}}]}]}]]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":"For detailed documentation, see:"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","$La",null,{"href":"/docs/cloud/api/actors/create","children":"Actors Create API Reference"}]}],"\n",["$","li",null,{"children":["$","$La",null,{"href":"/docs/actors","children":"Actors"}]}],"\n",["$","li",null,{"children":["$","$La",null,{"href":"/docs/cloud/containers","children":"Containers"}]}],"\n",["$","li",null,{"children":["$","$La",null,{"href":"/docs/config","children":"Configuration Reference"}]}],"\n"]}],"\n",["$","$L1d",null,{"level":2,"id":"learning-more","children":"Learning More"}],"\n",["$","p",null,{"children":"For more comprehensive coverage of game server development with Rivet:"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":["$","$La",null,{"href":"/docs/api","children":"Rivet API Docs"}]}]," - Complete API reference for direct Rivet integration"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":["$","$La",null,{"href":"/docs/local-development","children":"Local Development"}]}]," - Setting up your local environment for development"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":["$","$La",null,{"href":"/docs/troubleshooting","children":"Troubleshooting"}]}]," - Common issues and their solutions"]}],"\n"]}]]]}],["$","div",null,{"className":"border-t mt-8 mb-2"}],["$","a",null,{"href":"https://github.com/rivet-gg/rivet/edit/main/site/src/content/docs/cloud/solutions/game-servers.mdx","target":"_blank","rel":"noreferrer","children":[["$","svg",".0",{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"pencil","className":"svg-inline--fa fa-pencil ","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 512 512","style":{},"ref":"$undefined","children":["$","path",null,{"fill":"currentColor","d":"M410.3 231l11.3-11.3-33.9-33.9-62.1-62.1L291.7 89.8l-11.3 11.3-22.6 22.6L58.6 322.9c-10.4 10.4-18 23.3-22.2 37.4L1 480.7c-2.5 8.4-.2 17.5 6.1 23.7s15.3 8.5 23.7 6.1l120.3-35.4c14.1-4.2 27-11.8 37.4-22.2L387.7 253.7 410.3 231zM160 399.4l-9.1 22.7c-4 3.1-8.5 5.4-13.3 6.9L59.4 452l23-78.1c1.4-4.9 3.8-9.4 6.9-13.3l22.7-9.1 0 32c0 8.8 7.2 16 16 16l32 0zM362.7 18.7L348.3 33.2 325.7 55.8 314.3 67.1l33.9 33.9 62.1 62.1 33.9 33.9 11.3-11.3 22.6-22.6 14.5-14.5c25-25 25-65.5 0-90.5L453.3 18.7c-25-25-65.5-25-90.5 0zm-47.4 168l-144 144c-6.2 6.2-16.4 6.2-22.6 0s-6.2-16.4 0-22.6l144-144c6.2-6.2 16.4-6.2 22.6 0s6.2 16.4 0 22.6z","style":{}}]}],"Suggest changes to this page"],"className":"group group/button inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:z-10 relative aria-disabled:pointer-events-none aria-disabled:opacity-50 disabled:pointer-events-none disabled:opacity-50 [&_svg]:size-[1em] hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2 gap-1.5","ref":null,"disabled":"$undefined"}],["$","$L31",null,{}]]}],["$","aside",null,{"className":"hidden xl:block w-64 min-w-0 flex-shrink-0 pb-4","children":["$","$L32",null,{"className":"lg:max-h-content","tableOfContents":[{"title":"Quickstart","id":"quickstart","children":[{"title":"Step 1: Preparing your game server code","id":"step-1-preparing-your-game-server-code","children":[]},{"title":"Step 2: Creating a Rivet configuration","id":"step-2-creating-a-rivet-configuration","children":[]},{"title":"Step 3: Deploying your game server","id":"step-3-deploying-your-game-server","children":[]},{"title":"Step 4 (optional): Starting game server instances with a backend API","id":"step-4-optional-starting-game-server-instances-with-a-backend-api","children":[]},{"title":"Step 5 (optional): Connecting players to your game server","id":"step-5-optional-connecting-players-to-your-game-server","children":[]},{"title":"Step 6 (optional): Destroying servers once finished","id":"step-6-optional-destroying-servers-once-finished","children":[]}]},{"title":"Global Regions","id":"global-regions","children":[{"title":"Available Regions","id":"available-regions","children":[]},{"title":"Region Selection","id":"region-selection","children":[]}]},{"title":"Scaling Methods","id":"scaling-methods","children":[{"title":"Static Server Fleet","id":"static-server-fleet","children":[]},{"title":"Dynamic Load-Based Scaling","id":"dynamic-load-based-scaling","children":[]},{"title":"On-Demand Lobby Creation","id":"on-demand-lobby-creation","children":[]},{"title":"Custom Game Lobbies","id":"custom-game-lobbies","children":[]}]},{"title":"Upgrading Servers","id":"upgrading-servers","children":[{"title":"Default Behavior","id":"default-behavior","children":[]},{"title":"Targeted Server Upgrading","id":"targeted-server-upgrading","children":[]},{"title":"Zero-Downtime Rolling Upgrades With Draining","id":"zero-downtime-rolling-upgrades-with-draining","children":[]}]},{"title":"Server Configuration Options","id":"server-configuration-options","children":[]},{"title":"Learning More","id":"learning-more","children":[]}]}]}]]}]}]]
18:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
13:null
1b:{"metadata":[["$","title","0",{"children":"Multiplayer Game Servers - Rivet"}],["$","meta","1",{"name":"description","content":"Rivet provides a robust platform for deploying, scaling, and managing game servers globally."}],["$","link","2",{"rel":"canonical","href":"https://www.rivet.gg/docs/cloud/solutions/game-servers/"}],["$","meta","3",{"property":"og:title","content":"Multiplayer Game Servers - Rivet"}],["$","meta","4",{"property":"og:description","content":"Rivet provides a robust platform for deploying, scaling, and managing game servers globally."}],["$","meta","5",{"property":"og:url","content":"https://www.rivet.gg/"}],["$","meta","6",{"property":"og:site_name","content":"Rivet"}],["$","meta","7",{"property":"og:locale","content":"en_US"}],["$","meta","8",{"property":"og:image","content":"https://www.rivet.gg/promo/og.png"}],["$","meta","9",{"property":"og:image:width","content":"1200"}],["$","meta","10",{"property":"og:image:height","content":"630"}],["$","meta","11",{"property":"og:image:alt","content":"Rivet"}],["$","meta","12",{"property":"og:type","content":"website"}],["$","meta","13",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","14",{"name":"twitter:site","content":"@rivetgg"}],["$","meta","15",{"name":"twitter:title","content":"Multiplayer Game Servers - Rivet"}],["$","meta","16",{"name":"twitter:description","content":"Rivet provides a robust platform for deploying, scaling, and managing game servers globally."}],["$","meta","17",{"name":"twitter:image","content":"https://www.rivet.gg/promo/og.png"}],["$","meta","18",{"name":"twitter:image:width","content":"1200"}],["$","meta","19",{"name":"twitter:image:height","content":"630"}],["$","meta","20",{"name":"twitter:image:alt","content":"Rivet"}]],"error":null,"digest":"$undefined"}
16:{"metadata":"$1b:metadata","error":null,"digest":"$undefined"}
