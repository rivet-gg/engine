/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Rivet from "../../../../api/index";
import * as core from "../../../../core";

export const RunnerConfigsUpsertRequestServerless: core.serialization.ObjectSchema<
    serializers.RunnerConfigsUpsertRequestServerless.Raw,
    Rivet.RunnerConfigsUpsertRequestServerless
> = core.serialization.object({
    maxRunners: core.serialization.property("max_runners", core.serialization.number()),
    minRunners: core.serialization.property("min_runners", core.serialization.number()),
    requestLifespan: core.serialization.property("request_lifespan", core.serialization.number()),
    runnersMargin: core.serialization.property("runners_margin", core.serialization.number()),
    slotsPerRunner: core.serialization.property("slots_per_runner", core.serialization.number()),
    url: core.serialization.string(),
});

export declare namespace RunnerConfigsUpsertRequestServerless {
    export interface Raw {
        max_runners: number;
        min_runners: number;
        request_lifespan: number;
        runners_margin: number;
        slots_per_runner: number;
        url: string;
    }
}
