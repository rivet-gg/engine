/*
 * rivet-api-public
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.7.0
 * Contact: developer@rivet.gg
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RunnerConfigServerless {
    #[serde(rename = "max_runners")]
    pub max_runners: i32,
    #[serde(rename = "min_runners")]
    pub min_runners: i32,
    /// Seconds.
    #[serde(rename = "request_lifespan")]
    pub request_lifespan: i32,
    #[serde(rename = "runners_margin")]
    pub runners_margin: i32,
    #[serde(rename = "slots_per_runner")]
    pub slots_per_runner: i32,
    #[serde(rename = "url")]
    pub url: String,
}

impl RunnerConfigServerless {
    pub fn new(max_runners: i32, min_runners: i32, request_lifespan: i32, runners_margin: i32, slots_per_runner: i32, url: String) -> RunnerConfigServerless {
        RunnerConfigServerless {
            max_runners,
            min_runners,
            request_lifespan,
            runners_margin,
            slots_per_runner,
            url,
        }
    }
}

