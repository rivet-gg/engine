/*
 * rivet-api-public
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.7.0
 * Contact: developer@rivet.gg
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Actor {
    #[serde(rename = "actor_id")]
    pub actor_id: String,
    #[serde(rename = "connectable_ts", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub connectable_ts: Option<Option<i64>>,
    #[serde(rename = "crash_policy")]
    pub crash_policy: models::CrashPolicy,
    #[serde(rename = "create_ts")]
    pub create_ts: i64,
    #[serde(rename = "datacenter")]
    pub datacenter: String,
    #[serde(rename = "destroy_ts", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub destroy_ts: Option<Option<i64>>,
    #[serde(rename = "key", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub key: Option<Option<String>>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "namespace_id")]
    pub namespace_id: String,
    #[serde(rename = "pending_allocation_ts", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub pending_allocation_ts: Option<Option<i64>>,
    #[serde(rename = "runner_name_selector")]
    pub runner_name_selector: String,
    #[serde(rename = "sleep_ts", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub sleep_ts: Option<Option<i64>>,
    #[serde(rename = "start_ts", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub start_ts: Option<Option<i64>>,
}

impl Actor {
    pub fn new(actor_id: String, crash_policy: models::CrashPolicy, create_ts: i64, datacenter: String, name: String, namespace_id: String, runner_name_selector: String) -> Actor {
        Actor {
            actor_id,
            connectable_ts: None,
            crash_policy,
            create_ts,
            datacenter,
            destroy_ts: None,
            key: None,
            name,
            namespace_id,
            pending_allocation_ts: None,
            runner_name_selector,
            sleep_ts: None,
            start_ts: None,
        }
    }
}

